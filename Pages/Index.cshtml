@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
<link rel="stylesheet" type="text/css" href="~/css/jsuites.css" asp-append-version="true"/>
<link rel="stylesheet" type="text/css" href="~/css/2019.2.619.kendo.common.min.css" asp-append-version="true"/>
<link rel="stylesheet" type="text/css" href="~/css/2019.2.619.kendo.rtl.min.css" asp-append-version="true"/>
<link rel="stylesheet" type="text/css" href="~/css/2019.2.619.kendo.silver.min.css" asp-append-version="true"/>
<link rel="stylesheet" type="text/css" href="~/css/jexcel.css" asp-append-version="true"/>
<link rel="stylesheet" type="text/css" href="~/css/select2.css" asp-append-version="true"/>
<link rel="stylesheet" type="text/css" href="~/css/chosen.min.css" asp-append-version="true"/>
<script type="text/javascript" src="~/js/jquery-3.4.1.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/js/jquery.min.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/js/select2.full.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/js/2019.2.619.kendo.all.min.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/js/loadingoverlay.min.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/js/chosen.jquery.min.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/js/jexcelv4.js" asp-append-version="true"></script>
<script type="text/javascript" src="~/js/jsuitesv4.js" asp-append-version="true"></script>


<style>

multiselect-clearable .k-multiselect-wrap {
padding-right: 0em !important;
}


.ms-webpartPage-root {
border-spacing: 0px !important;
}
.jexcel > thead > tr > td {
    /*background-color: #eeeeee !important*/
    background-image: none, linear-gradient(to bottom, rgba(255, 255, 255, 0.45) 0px, rgba(255, 255, 255, 0) 100%);
    background-position: 50% 50%;
    background-color: white !important;
    color: black !important;
    border-width: 1px;
    word-break: break-word !important;
    text-align: center !important;
    height: 35px;
}
        
.jexcel > tbody > tr > td {
    /*border-color: #000 !important;*/
    border-color: #bbdceb !important;
    color: #00435e;
    height: 35px;
}   
.jexcel > tbody > tr > td.readOnly {
    /*border-color: #000 !important;*/
    
    color: #90a7ab !important;
}
        
 /* .jexcel > tbody > tr:nth-child(even) {
   border-color: #000 !important;
    background-color: #f2f2f2;
}*/
.rollupheader{
    background-color: #dcf9fd;
}
.clsOptiondefault{
    color: lightgrey;
}
        
.jdropdown-content > jdropdown-item:nth-child(even) {
    /*border-color: #000 !important;*/
    background-color: #f2f2f2;
}
multiselect-clearable .k-multiselect-wrap {
    padding-right: 0em !important;
}
    
.jexcel > tbody > tr:hover {
    background-image: none, linear-gradient(to bottom, rgba(255, 255, 255, 0.45) 0px, rgba(255, 255, 255, 0) 100%);
    background-position: 50% 50%;
    background-color: #dcf9fd;
    color: black;
    border-width: 1px;
    word-break: break-word !important;
    text-align: center !important;
}
            
.k-gantt-create,.k-gantt-views{
    display:none;
}
.legend .idearow { background-color: white; }
.legend .projectrow { background-color: #f2f2f2; }
            
.jexcel > tbody > tr > td[data-x="1"]  {
    overflow: hidden;
    text-overflow: ellipsis;
}			

div.k-grid-header {
padding-right: 0px;
border-bottom-style: solid;
border-bottom-width: 1px;
zoom: 1;
}
[data-title]:hover:after {
    visibility: visible;
}
      
[data-title]:after {
    content: attr(data-title);
    background-color: #bbdceb;    
    color: #00435e;            
    position: absolute;
    padding: 4px 4px 4px 8px;
    visibility: hidden;
    white-space: pre-wrap;
    border-radius: 4px;
    width: auto;
    background-image: none, linear-gradient(to bottom, rgba(255, 255, 255, 0.45) 0px, rgba(255, 255, 255, 0) 100%);    
    line-height: 18px;   
    text-align: justify;
    cursor:help;
    z-index: 50000;
    box-shadow: rgb(0 0 0 / 30%) 0 2px 10px;
}

            .Contentt th:nth-child(2),
.Contentt td:nth-child(2) {
position: sticky;
left: 2px;
width: 150px;
min-width: 150px;
}
</style>
  <style>
  multiselect-clearable .k-multiselect-wrap {
padding-right: 0em !important;
}
  .legend { list-style: none; }
.legend li { float: left; margin-right: 0px; }
.legend span { border: 1px solid black; float: left; width: 16px; height: 16px; margin: 2px; }
  .legend .idearow { background-color: white; }
    .legend .projectrow { background-color: #f2f2f2; }
     .icon {
     vertical-align: bottom;
     margin-top: 2px;
     margin-bottom: 3px;
     cursor: pointer;
     }
     .icon:active {
     opacity: .5;
     }
     .demo.button input {
     margin-right: 2px;
     }
     .demo.button .ui-button-text {
     padding: .4em .6em;
     line-height: 0.8;
     }
     input[type='text'] {
     width: 60px;
     }
     .jexcel > thead > tr > td {
         background-color: white !important;
         color: Black !important;
         border: 1px solid #d0c6c6!important;
         cursor: default;
        
     }
     .jexcel>tbody>tr>td {
            border: 1px solid #d0c6c6!important;
        }
        #filtercontainer { 

text-align: justify;
text-align: match-parent;
/* just for demo */
min-width: 612px;
}
.margincontrols{

margin-left: 5px;
}		

.k-multiselect-clearable .k-multiselect-wrap {
padding-right: 1em !important;
}

.k-multiselect-clearable .k-input {
/* overflow: hidden; */
/* text-overflow: ellipsis; */

}

.k-button {
border-radius: 0px;
border-color: white;
color: #515967;
background-color: white;
background-position: 50% 50%;
background-image: url(textures/highlight.png);
background-image: none,linear-gradient(to bottom,rgba(255,255,255,.2) 0,rgba(255,255,255,0) 100%);
}

.k-button.k-state-hover, .k-button:hover {

border-color: white;
background-color: white;
background-position: 50% 50%;
background-image: none,linear-gradient(to bottom,rgba(255,255,255,.2) 0,rgba(255,255,255,0) 100%);
}



.k-multiselect {
position: relative;
}

.k-multiselect:after {
content: "\25BC";
position: absolute;
top: 6px;
right: 20px;
font-size: 11px;
}

.k-i-close:before {
content: "\e11b";
top: -5%;
position: absolute;
font-size: 13px;
right: 20px;
}


.k-multiselect-wrap>.k-i-close {
right: calc(1em - 7px);
top: 31%;
}



.k-multiselect-wrap>.k-i-close {
font-size: 94%;
display: none;
position: absolute;
cursor: pointer;
}

div.k.widget.k-multiselect.k-multiselect-clearable::after{
top: 31%;
}



.k-gantt .k-gantt-layout th {
vertical-align: bottom;
text-align: center;
}


.div1 {

}

.div2 {

}

.jexcel_hidden_index
{

}

.k-gantt-layout .k-gantt-timeline
{
width: auto !important;
}

.disabled{
pointer-events:none;
opacity:0.4;
cursor:not-allowed;
}

.tt{
font-family: "Segoe UI Light","Segoe UI","Segoe",Tahoma,Helvetica,Arial,sans-serif;
color: #262626 !important;
}

.ms-cui-topBar2 {
border-bottom-color: #ceced2  !important;
border-bottom-style: solid  !important;
}
.dropdown-check-list {
display: inline-block;
/* position: absolute;
top:3px;
left:105px; */
}
.dropdown-check-list_second {
display: inline-block;
/* position: absolute;
top:3px;
left:21px; */
}

.dropdown-check-list .sortingtypeListanchor {
position: relative;
cursor: pointer;
display: inline-block;
/*padding: 5px 50px 5px 10px;
border: 1px solid #ccc;*/
}

.dropdown-check-list .sortingtypeListanchor:after {
position: absolute;
/*content: "";*/
border-left: 2px solid black;
border-top: 2px solid black;
padding: 5px;
right: 10px;
top: 20%;
-moz-transform: rotate(-135deg);
-ms-transform: rotate(-135deg);
-o-transform: rotate(-135deg);
-webkit-transform: rotate(-135deg);
transform: rotate(-135deg);
}

.dropdown-check-list .sortingtypeListanchor:active:after {
right: 8px;
top: 21%;
}
.dropdown-check-list_second .sortingtypeListanchor1 {
position: relative;
cursor: pointer;
display: inline-block;
/*padding: 5px 50px 5px 10px;*/
/*border: 1px solid #ccc;*/
}

.dropdown-check-list_second .sortingtypeListanchor1:after {
position: absolute;
/*content: "";*/
border-left: 2px solid black;
border-top: 2px solid black;
padding: 5px;
/* right: 10px; */
top: 20%;
-moz-transform: rotate(-135deg);
-ms-transform: rotate(-135deg);
-o-transform: rotate(-135deg);
-webkit-transform: rotate(-135deg);
transform: rotate(-135deg);
}

.dropdown-check-list_second .sortingtypeListanchor1:active:after {
right: 8px;
top: 21%;
}
.dropdown-check-list ul.sortingtypeListitems {
padding: 2px;
display: none;
margin: 0;
border: 1px solid #ccc;
border-top: 1px solid #ccc;

}
.dropdown-check-list_second ul.sortingtypeListitems1 {
padding: 2px;
display: none;
margin: 0;
border: 1px solid #ccc;
border-top: 1px solid #ccc;

}
.dropdown-check-list ul.sortingtypeListitems li {
list-style: none;
padding: 6px 6px 4px 4px;
cursor: pointer
}
.dropdown-check-list ul.sortingtypeListitems li:hover {
background-color: #ddd;/*#dedee0;*/
background-image: none, linear-gradient(to bottom, rgba(255, 255, 255, 0.4) 0px, rgba(255, 255, 255, 0) 100%);
}

.dropdown-check-list.visible .sortingtypeListanchor {
color: #0094ff;

}
.dropdown-check-list_second.visible .sortingtypeListanchor1 {
color: #0094ff;

}
.dropdown-check-list.visible .sortingtypeListitems {
text-align: initial;
display: block;
position: absolute;
background: #f5f5f5;
font-size: 13px;
font-family: "Segoe UI", Segoe, Tahoma, Helvetica, Arial, sans-serif;
font-stretch: 100%;
font-style: normal;
font-weight: 500;
line-height: normal;
transform: translateY(0px);
border-radius: 0 0 4px 4px;
box-shadow: 0 2px 2px 0 rgb(0 0 0 / 30%);

}
.dropdown-check-list_second ul.sortingtypeListitems1 li {
list-style: none;
padding: 6px 6px 4px 4px;
cursor: pointer
}
.dropdown-check-list_second ul.sortingtypeListitems1 li:hover {
background-color: #ddd;/*#dedee0;*/
background-image: none, linear-gradient(to bottom, rgba(255, 255, 255, 0.4) 0px, rgba(255, 255, 255, 0) 100%);
}



.dropdown-check-list_second.visible .sortingtypeListitems1 {
text-align: initial;
display: block;
position: absolute;
background: #f5f5f5;
font-size: 13px;
font-family: "Segoe UI", Segoe, Tahoma, Helvetica, Arial, sans-serif;
font-stretch: 100%;
font-style: normal;
font-weight: 500;
line-height: normal;
transform: translateY(0px);
border-radius: 0 0 4px 4px;
box-shadow: 0 2px 2px 0 rgb(0 0 0 / 30%);

}

  </style>
  <div class="tt" style="white-space: nowrap;left: 0;width: 600px;z-index: 999;margin-top: -72px;position: sticky;font-size: 1.2em;padding-bottom: 21px;">
  <table><tr><td><input type="text" style="width: 0px;border: none;height: 0px;"></td><td><h1 style="color: #262626 !important;">ResourceAnalyzer</h1></td></tr></table>
   </div>
 <!-- <div style="padding-bottom:23px;position:fixed;white-space: nowrap;"><label>-->
 <div class='InfomessageGT' style="white-space: nowrap;left: 0;width: 600px;z-index: 999;position: sticky;">
 <table><tr><td><input type="text" style="width: 0px;border: none;height: 0px;"></td><td>
 <label id='pageinfomess' >  </label></td></tr></table>
 </div>
 <div class='InfomessageGF' style="color:red;white-space: nowrap;left: 0;width: 600px;z-index: 999;position: sticky;">
         <table>
                <tr>
                    <td>
                       <label id='GroupmessF' > </label>
                       </td>
               </tr>
           </table>
 </div>
   <!-- <div id="maindiv" style=";position:fixed;left:0;margin-left: 221px;padding-top: 30px;white-space: nowrap;"><div style="display:none">-->
   <div id="maindiv" style="padding-top: 10px;left: 0;width: 600px;z-index: 999;white-space: nowrap;position: sticky;">
       <div style="display:none">
       <label>Start<span style="color:red;font-weight:bold">*</span>:</label> <input id="start" /><label>End<span style="color:red;font-weight:bold">*</span>:</label><input id="end"  />
       </div>
        <table><tr><td><input type="text" style="width: 0px;border: none;height: 0px;"></td><td>
        <label id="idealbl"> </label><span id="idealblspan" style="color:red;font-weight:bold">*</span>
        <select id="drp_resources"  style="display:none" data-placeholder="Ideas / Projects" multiple="multiple" > </select>
  </td></tr></table>
  
  <p style="display:none;"> Select Grouping<span style="color:red;font-weight:bold">*</span>: <INPUT TYPE="Radio" Name="GroupingData" Value="Resource">Resource<INPUT TYPE="Radio" Name="GroupingData" Value="ResourceType">Resource Type </p>
 
 <div id="filtercontainer">
 
 <table>
          <ul id="legendul" style="display:none;" class="legend">
                <li><span class="idearow"></span><b> Ideas</b></li>
                <li><span class="projectrow"></span><b> Projects</b></li>
            </ul>
        <td><input type="text" style="width: 0px;border: none;height: 0px;"></td>
        <td id="lbltd" style="display:none"><label style="padding-right:76px;">Resource Filters</label></td>
        <tr id="dynmaicddn"></tr>
        
         <tr id="btns1" style="display:none;">
              <td style="padding-left:6px;"><input id="btn1" type="button" value="Analyze" onclick="updateaftercommitBeforeAnalyze()" style="margin-top:5px;margin:5px; margin-left:0px !important;margin-right:0px !important;" ></td>
        </tr>
        <tr id="btns2" style="display:none;">
         <td style="padding-left:6px;"><input id="btn2"  type="button" value="Clear Filters" onclick="setFilterReset()" style="margin-top:5px;margin:5px; margin-left:0px !important;" ></td>
        </tr>
</table>
  </div>

    <span id='message' style='color: red;'></span>
 </div>
 <div id='accessmsg'   style='color:red;'><span style="display:none;color:red;">Access Denied*</span></div>
  
 
 
    <div id="example" style="left: 2px;z-index: 999;position: sticky;" >
        <div id="gantt">
        </div>
    </div>
    
    
    
     <div class="wrapper2">
            <div id="ganttGrid"  class="div2" style="float:left;height: auto;"><span></span></div>
    </div>


<script>
function getParameterByName(name) {
                name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
                var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
                results = regex.exec(location.search.toLowerCase());
                return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
            }
</script>
<script>
  
 
</script>


<script>
var ck = 0;
var GridGantt=[];
var GridGanttIndex=0;
var GridTPhase=[];
var GridTPhaseIndex=0;
var GridGrid=[];
var GridGridIndex=0;
var Gridtable;
var OutputResponseTable;
var OutputResponseTable1;
var Table1Data;
var TableData;
var OutputResponseTable_Group;
var arr_GroupName=[];
var arr_GroupName_Count=[];
var GanttStart;
var GanttFinish;
var NewGanttStart;
var NewGanttFinish;
var GanttGridView_lbl=[];
var GanttGridView_State=[];
var ChangedProject
var ChangedProjectStart
var ChangedProjectStartNew
var ChangedProjectEnd
var ChangedProjectEndNew
var monthNames = ["Jan", "Feb", "Mar","Apr", "May", "Jun", "Jul","Aug", "Sep", "Oct","Nov", "Dec"]
var monthNamesFull = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
function changeDate(e) {
  var curElemID = e.sender.element.context.id ;
  switch(curElemID){
    case "start" || "end":
    if ($(this.element).is("#start")) {
     //  $("#end").data("kendoDatePicker").setOptions({ min: this.value() });
    }else{
      $("#start").data("kendoDatePicker").setOptions({ max: this.value() });
    }
    break;						
    default: break;
  }
}	 
var deletEngagenetarray=[];	
var arr_ProjectNo=[];
var arr_ProjectStart=[];
var arr_ProjectFinish=[];	
var resGetResources = [];
var ResFilter = [];
var MaxUnitFilter = false;
var FotColor = [];
var IdeasArr=[];
var ideaArr1=[];
var ResFilterArr = [];
var potentialItm_flag = false;
var potentialItm_Val = '';
/**DevOps**/
if (location.hostname == "projectmadeeasy.sharepoint.com") {
  var spUserId = _spPageContextInfo.userId;
  var siteAbsoluteUrl = _spPageContextInfo.siteAbsoluteUrl;
}else{
  var spUserId = 915;
  var siteAbsoluteUrl ='https://projectmadeeasy.sharepoint.com/sites/Development';
}
/**DevOps**/
var azurewebsites = "https://appcgdev.azurewebsites.net"
var TestGlobal;
$(document).ready(function () {


    console.log(new Date() + " | 1")
    ResFilterArr = [];
    $(".ms-core-listMenu-verticalBox").hide()
    $("#pageTitle").css('display', 'none');
    if (location.hostname == "projectmadeeasy.sharepoint.com") {
      var urlGetResources = siteAbsoluteUrl + "/_API/ProjectData/Resources";
      var urlM = siteAbsoluteUrl+"/_api/web/lists/getByTitle('RM%20App%20Settings')/items?$top=4998&$select=ID,Formula,FormulaNumber,Title,ProjectFilter,Display,ProjectFilterValue";
    } else { 
      var urlGetResources = "OdataResource.json";
      var urlM = "Odata.json";
    }
    resGetResources = getAjex(urlGetResources);
    var resM = getAjex(urlM);
  FotColor = [];
  $.each(resM.value, function (indx, MGrid) {
    /*if(MGrid.Title=='Potential Ideas Filter'){
      var Symbol;
      if(MGrid.Formula=='Equal to|eq'){
        Symbol='='; 
      }else if(MGrid.Formula=='Not equal to|ne'){
        Symbol='!=';   
      }else if(MGrid.Formula=='Greater than|gt'){
        Symbol='>';   
      }else if(MGrid.Formula=='Greater than or equal to|ge'){
        Symbol='>=';  
      }else if(MGrid.Formula=='Less than|lt'){
        Symbol='<';   
      }else if(MGrid.Formula=='Less than or equal to|le'){
        Symbol='<=';   
      }
      var condition=MGrid.ProjectFilter.replace(/\s/g, '')+Symbol+"'"+MGrid.ProjectFilterValue+"'";
      IdeasArr.push({"condition":condition});	
    }*/		  
    if(MGrid.Title == 'Resource Filter'){
      if(MGrid.Display){						
        if(ResFilterArr.indexOf(MGrid.ProjectFilter)){
          ResFilterArr.push(MGrid.ProjectFilter);
          ResFilter.push(MGrid)
        }
      }
      if(ResFilter.length > 0){
        ResFilter.sort(function(a, b) { 
          return a.FormulaNumber - b.FormulaNumber
        });	
      }
    }
    if(MGrid.Title == 'Max Units'){
      if(MGrid.Display){						
        MaxUnitFilter = MGrid.Display;
      }else{
        MaxUnitFilter = MGrid.Display;
      }
    }
    if(MGrid.Title == 'Allocation'){
      if(MGrid.Display){
        FotColor.push(MGrid)
      }
    }
    if(MGrid.Title == 'Potential Items Column'){
      if(MGrid.Display){
        potentialItm_flag = true;
        potentialItm_Val = MGrid.ProjectFilter;
      }else{
        potentialItm_flag = false;
      }
    }
  });
  FotColor = FotColor.sort(function(a, b) { 
    return a.FormulaNumber - b.FormulaNumber
  });
  console.log(new Date()+" | 2")
        if (location.hostname == "projectmadeeasy.sharepoint.com") {
    ExecuteOrDelayUntilScriptLoaded(IsCurrentUserMemberOfGroup, "sp.js");
  }else{
        $(".InfomessageGF").hide()
        $(".InfomessageGT").show()
        $(".ms-core-listMenu-verticalBox").show()
        $("#idealbl").text("Potential Ideas / Projects")
        $("#pageinfomess").text("To use the Analyzer, select potential ideas / projects you want to review, apply any resource filters you need to limit which resources should be factored into your analysis, and then press the Analyze button.")
        $("#maindiv").show()
        console.log(new Date() + " | 3")
        OnPaggeloadFun()
	}

$(document).mousemove(function(e){

        if($("#drp_resources").val() != null){
                    $($("#drp_resources").prev().find('span')[0]).show();
                      
                }
 }); 

});


var ddnid = [];
var ddntext=[];
var allval=[];
var userInGroup;


function IsCurrentUserMemberOfGroup() {
var  mygroup  = "Analyzer Users";
    var currentContext = new SP.ClientContext.get_current();

    var currentWeb = currentContext.get_web();

    var currentUser = currentContext.get_web().get_currentUser();

    currentContext.load(currentUser);

    var allGroups = currentWeb.get_siteGroups();

    currentContext.load(allGroups);

    var group = allGroups.getByName(mygroup);

    currentContext.load(group);

    var groupUsers = group.get_users();

    currentContext.load(groupUsers);

    currentContext.executeQueryAsync(OnSuccess, OnFailure);

    function OnSuccess(sender, args) {

        var groupUserEnumerator = groupUsers.getEnumerator();

        while (groupUserEnumerator.moveNext()) {

            var groupUser = groupUserEnumerator.get_current();

            if (groupUser.get_id() == currentUser.get_id()) {
                userInGroup = true;
                break;

            }

        }

        if (userInGroup) {
            $(".InfomessageGF").hide()
                $(".InfomessageGT").show()
                $(".ms-core-listMenu-verticalBox").show()
                $("#idealbl").text("Potential Ideas / Projects")
                $("#pageinfomess").text("To use the Analyzer, select potential ideas / projects you want to review, apply any resource filters you need to limit which resources should be factored into your analysis, and then press the Analyze button.")
                $("#maindiv").show()
                console.log(new Date()+" | 3")
            OnPaggeloadFun()
        }
        else { 
                userInGroup = false;
                $(".InfomessageGF").show()
                $(".InfomessageGT").hide()
                $("#GroupmessF").text("Access Denied: You are not a member of the Analyzer Users group.  Contact your administrator for any access changes.")
                $("#maindiv").hide()					
                $(".ms-core-listMenu-verticalBox").hide()
            }
       
    }
    
     function OnFailure(sender, args) {			 
         userInGroup = false;
         $(".InfomessageGF").show()
                $(".InfomessageGT").hide()
                $("#maindiv").hide()
                $(".ms-core-listMenu-verticalBox").hide()
    }

}


function OnPaggeloadFun() {
console.log(new Date()+" | 4")
  //  userInGroup = false;
    $("#accessmsg").hide();
    $("#accessmsg").text("");
    $("#maindiv").show();
    // $("#MSOZoneCell_WebPartWPQ4").show();

    setTimeout(function() {

        var html = "<ul id='legendul' style='display:none;' class='legend'>" + "<li class='static'>" + "<li><span class='idearow' style='margin-left:28px'></span><b> Ideas</b></li><br><br>" +
            "<li><span class='projectrow' style='margin-left:28px'></span><b> Projects</b></li>" +
            "</ul></li>";

        $("#zz14_RootAspMenu").after(html)

    }, 2000);


    arr_ProjectNo = []
    arr_ProjectStart = [];
    arr_ProjectFinish = []

    $("#start").kendoDatePicker({
        change: changeDate,
        start: "year",
        depth: "year",
        format: "MMMM yyyy",
        value: "MM YYYY"
    });
    var datePicker = $("#start").data("kendoDatePicker");
    var todayDate = new Date();
    todayDate.setMonth(todayDate.getMonth() - 1);
    datePicker.value(todayDate);
    datePicker.trigger("change");

    $("#end").kendoDatePicker({
        change: changeDate,
        start: "year",
        depth: "year",
        format: "MMMM yyyy",
        value: "MM YYYY"
    });

    var datePicker2 = $("#end").data("kendoDatePicker");
    var todayDate2 = new Date();
    var dt = new Date(todayDate2.setMonth(todayDate2.getMonth() + 25));
    datePicker2.value(dt);
    datePicker2.trigger("change");

    var datePicker = $("#start").data("kendoDatePicker");
    var todayDate = new Date();
    var GanttData;
    var drpValue = [];
    var selectedDrp = false;
    todayDate.setMonth(todayDate.getMonth() - 1);
    datePicker.value(todayDate);
    datePicker.trigger("change");
console.log(new Date()+" | 5")
/*var paraT="";
for(i=0;i<IdeasArr.length;i++){
paraT +=IdeasArr[i]['condition']+' OR '  
}
var lastIndex = paraT.lastIndexOf(" OR");
paraT = paraT.substring(0, lastIndex);*/
$.ajax({ 
        //url: azurewebsites+'/Api/Gantt_ProjectListFilter/'+paraT+'/1 2020/2 2020',
        url: azurewebsites+'/Api/GanttUpdated_ProjectList/9FA7C3AC-3564-4836-9A50-8951792AF1B4/1 2020/2 2020',
        type: 'GET',
        async: false,
        processData: false,
        cache: false,
        contentType: false,
        dataType: 'json',
        success: function(data) {
console.log(new Date()+" | 6")
            $($('div.k-multiselect')[0]).hide()

            OutputResponseTable
            OutputResponseTable1
            var ResponseTable = JSON.parse(data)

            var Ldata = [];
            var Ddata = [];

            
var TempGanntData = ResponseTable.Table;
var GanttData = [];

for (let i = 0; i < TempGanntData.length; i++) {
  const object = TempGanntData[i];
  const Projectname = object.Projectname;

  if (Projectname) {
    const words = Projectname.split(' ');

    // Check if the first word is a scientific notation value
    if (/^\d+(\.\d+)?e\+\d+$/.test(words[0])) {
       
      // Convert the scientific notation value to a normal number
      const numberValue = parseFloat(words[0]);

      // Format the number with commas using toLocaleString
      const formattedNumberValue = numberValue.toLocaleString();

      // Replace the first word with the formatted value
      words[0] = formattedNumberValue;

      // Join the words back into a single string
      const modifiedProjectname = words.join(' ');

      // Create a new object with the modified projectname and other properties
      const newObject = {
        ...object,
        Projectname: modifiedProjectname,
      };

      // Add the new object to the new array
      GanttData.push(newObject);
    } else {
      // Check if the first word is a numeric value
      const numericValue = parseFloat(words[0].replace(/,/g, ''));

      // Check if the first word is a date-like value
      const isDateLike = /^\d{4}-\d{2}-\d{2}$/.test(words[0]);

      if (!isNaN(numericValue) && !isDateLike) {
        // Format the numeric value with commas using toLocaleString
        const formattedNumericValue = numericValue.toLocaleString();

        // Replace the first word with the formatted value
        words[0] = formattedNumericValue;
      }

      const modifiedTitle = words.join(' ');

      const newObject = {
        ...object,
        Projectname: modifiedTitle,
      };

      GanttData.push(newObject);
    }
  } else {
    GanttData.push(object);
  }
}

GanttData.sort(function (a, b) {
  const aPotential1 = a.Prefix1;
  const bPotential1 = b.Prefix1;

  // Check if Potential1 is empty or null for both objects
  if ((aPotential1 === null || aPotential1 === "") && (bPotential1 === null || bPotential1 === "")) {
    return a.Projectname.localeCompare(b.Projectname);
  }

  const aPrefixType = getPrefixType(aPotential1);
  const bPrefixType = getPrefixType(bPotential1);

  if (aPotential1 !== null && aPotential1 !== "" && bPotential1 !== null && bPotential1 !== "") {
         if (aPrefixType === 'number' && bPrefixType === 'number') {
      const aNumber = parseFloat(aPotential1);
      const bNumber = parseFloat(bPotential1);
      return aNumber - bNumber;
    }else if(aPrefixType === 'date' && bPrefixType === 'date'){
      const aDate = new Date(a.Prefix1);
      const bDate = new Date(b.Prefix1);
      return aDate - bDate;
    }
  } else if (aPotential1 === "" || aPotential1 === null) {
    // Sort empty Potential1 objects after special types and number/date prefixes
    if (bPrefixType === 'number' || bPrefixType === 'date') {
      return 1;
    }
    if (bPrefixType === 'text') return 1; // Text type first
    if (bPrefixType === 'boolean') return 1; // Boolean type first
  } else if (bPotential1 === "" || bPotential1 === null) {
    // Sort empty Potential1 objects after special types and number/date prefixes
    if (aPrefixType === 'number' || aPrefixType === 'date') {
      return -1;
    }
    if (aPrefixType === 'text') return -1; // Text type first
    if (aPrefixType === 'boolean') return -1; // Boolean type first
  }

  // If Potential1 is empty or null, sort alphabetically
  return a.Projectname.localeCompare(b.Projectname);
});

 

            strOptions = ""

            for (var i = 0; i < GanttData.length; i++) {
                strOptions = strOptions + "<option  value='" + GanttData[i].Projectuid + "' >" + GanttData[i].Projectname + "</option>";
                arr_ProjectNo.push(GanttData[i].Projectuid)
                arr_ProjectStart.push(GanttData[i].Start)
                arr_ProjectFinish.push(GanttData[i].Finish)

            } //failure
            strOptions = "<option  value=''></option>" + strOptions;

            $('#drp_resources').closest(".k-widget").hide();

            /*$("#drp_resources").text("");
                        $("#drp_resources").append(strOptions);
                        //$(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "150px",});
                        $("#drp_resources").chosen({no_results_text: "Oops, nothing found!",width: "1000px",search_contains: true}); 
                       $("#drp_resources").chosen({ search_contains: true });	
                        $(".chosen-select,.chosen-multiple-select").chosen({search_contains: true});	*/
            var optional = $("#drp_resources").kendoMultiSelect({
                autoClose: false,
                tagMode: "single",
                filter: "contains",

                select: function(e) {


                    var dataItem = this.dataSource.view()[e.item.index()];
                    //var cc = $("#drp_resources").val().length;

                    var values = dataItem === "Select All" ?
                        $.map(this.dataSource.data(), function(dataItem) {
                            return dataItem;

                        }) :
                        this.value();
                    drpValue = $("#drp_resources").val();
                    if (drpValue == null) {
                        drpValue = [];
                    }
                    drpValue.push(e.dataItem)
                    if (values.indexOf("Select All") != -1) {
                        drpValue = values;
                        this.value(values);
                    } else {
                        this.value(drpValue);
                    }
                    $($("#drp_resources").prev().find('span')[0]).show();
                    var id = $("#drp_resources");
                    $(id).closest('div').attr('Title', id.getKendoMultiSelect().value().sort().join(', '))
                    selectedDrp = true;
                    $('.k-input').eq(2).val('')
                },
                close:function(e) {filterDropdown()},
                change: function(e) {

                    //$($("#drp_resources").closest('div').next().next().find('div').find('input')[0]).css('width','25px');

                    if (drpValue.indexOf("Select All") == -1 && selectedDrp) {
                        this.value(drpValue);
                    }
                    selectedDrp = false
                    if ($("#drp_resources").val() != null) {
                        if ($("#drp_resources").val() == "Select All") {
                            var cc = $("#drp_resources").val().length;
                            $($("#drp_resources").prev().find('li')).text("Ideas / Projects (All)");
                            //$("#drp_resources").prev().find('input').css('margin-top','-25px');
                            // $("#drp_resources").prev().find('input').css('color','white');
                            $($("#drp_resources").prev().find('span')[0]).show();

                        } else {
                            var b = $("#drp_resources").val();
                            var cc = '';
                            if (b.length > 1 && b.indexOf("Select All") != -1) {
                                cc = $("#drp_resources").val().length - 1;
                            } else {
                                cc = $("#drp_resources").val().length
                            }

                            //varcc = $("#drp_resources").val().length;
                            $($("#drp_resources").prev().find('li')).text("Ideas / Projects (" + cc + ")");
                            // $("#drp_resources").prev().find('input').css('margin-top','-25px');
                            // $("#drp_resources").prev().find('input').css('color','white');
                            $($("#drp_resources").prev().find('span')[0]).show();
                        }
                    } else {

                        $("#drp_resources").prev().find('input').css('margin-top', '0px');
                        $("#drp_resources").prev().find('input').val("Ideas / Projects");
                        $("#drp_resources").prev().find('input').css('width', '150px');
                        /* setFilterReset();
                        $("#filtercontainer").hide(); */
                    }

                    var multiar = [];
                    filterApplied = true;
                    var item = e.item;
                    var text = this.value();
                    var id = $("#drp_resources");
                    $(id).closest('div').attr('Title', id.getKendoMultiSelect().value().sort().join(', '))

                }
            }).data("kendoMultiSelect");

            var arr = [];
            arr.push("Select All");
            for (var i = 0; i < GanttData.length; i++) {
                strOptions = strOptions + "<option  value='" + GanttData[i].Projectuid + "' >" + GanttData[i].Projectname + "</option>";
                arr.push(GanttData[i].Projectname);

                ddnid.push(GanttData[i].Projectuid);
                ddntext.push(GanttData[i].Projectname);
                allval.push({
                    "value": GanttData[i].Projectuid,
                    "text": GanttData[i].Projectname
                });


            }
        console.log(new Date()+" | 7")
            var dropdownlistF = $("#drp_resources").data("kendoMultiSelect");
            dropdownlistF.setDataSource(arr);
            $('#drp_resources').closest(".k-widget").hide();
        },
        error: function(err) {
            alert(err);
        }
    });
    console.log(new Date()+" | 8")
    $($('div.k-multiselect')[0]).hide();
    $('#drp_resources').closest(".k-widget").show();
    setTimeout(function() {
        $($('div.k-multiselect')[0]).show();
        $($('div.k-multiselect')[0]).css('width', '1103px')
        $($('div.k-multiselect')[0]).css('margin-top', '-22px')
        $($('div.k-multiselect')[0]).css('margin-left', '169px'), 10
    })

    $("#ddl_Organization").text("");
    $("#ddl_Organization").append("<option class='clsOptiondefault' value='1'>Select Supervisor</option>");
    $(".ddlFilters").chosen({
        no_results_text: "Oops, nothing found!",
        width: "200px",
    });
    $("#ddl_Organization").trigger("chosen:updated");

    $("#ddl_GBU").text("");
    $("#ddl_GBU").append("<option   value='1'>Select GBU</option>");
    $(".ddlFilters").chosen({
        no_results_text: "Oops, nothing found!",
        width: "80px",
    });
    $("#ddl_GBU").trigger("chosen:updated");

    $("#ddl_Location").text("");
    $("#ddl_Location").append("<option   value='1'>Select Location</option>");
    $(".ddlFilters").chosen({
        no_results_text: "Oops, nothing found!",
        width: "200px",
    });
    $("#ddl_Location").trigger("chosen:updated");

    $("#ddl_BUOwner").text("");
    $("#ddl_BUOwner").append("<option   value='1'>Select BU Owner</option>");
    $(".ddlFilters").chosen({
        no_results_text: "Oops, nothing found!",
        width: "200px",
    });
    $("#ddl_BUOwner").trigger("chosen:updated");

    $("#ddl_HireStatus").text("");
    $("#ddl_HireStatus").append("<option   value='1'>Hire Status</option>");
    $(".ddlFilters").chosen({
        no_results_text: "Oops, nothing found!",
        width: "200px",
    });
    $("#ddl_HireStatus").trigger("chosen:updated");
    if (1 == 0) {
        $.ajax({

            url: azurewebsites+'/Api/GanttUpdated_ParameterList/9FA7C3AC-3564-4836-9A50-8951792AF1B4/1 2020/2 2020',
            type: 'GET',
            async: false,
            processData: false,
            cache: false,
            contentType: false,
            dataType: 'json',
            success: function(data) {

                var ResponseTable = JSON.parse(data)

                var Organizationdata = "";
                var Locationdata = "";
                var GBUdata = "";
                var Ddata = [];

                var ParaData = ResponseTable.Table;
                strOptions = ""

                for (var i = 0; i < ParaData.length; i++) {
                    if (ParaData[i].ParameterText == "Organization") {
                        Organizationdata = Organizationdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                    }
                    if (ParaData[i].ParameterText == "ResourceGBU") {
                        GBUdata = GBUdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                    }
                    if (ParaData[i].ParameterText == "ResourceLocation") {
                        Locationdata = Locationdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                    }


                }
                Organizationdata = "<option  value=''></option>" + Organizationdata;
                GBUdata = "<option  value=''></option>" + GBUdata;
                Locationdata = "<option  value=''></option>" + Locationdata;

                $("#ddl_Organization").text("");
                $("#ddl_Organization").append(Organizationdata);
                $(".ddlFilters").chosen({
                    no_results_text: "Oops, nothing found!",
                    width: "200px",
                });
                $("#ddl_Organization").trigger("chosen:updated");

                $("#ddl_GBU").text("");
                $("#ddl_GBU").append(GBUdata);
                $(".ddlFilters").chosen({
                    no_results_text: "Oops, nothing found!",
                    width: "80px",
                });
                $("#ddl_GBU").trigger("chosen:updated");

                $("#ddl_Location").text("");
                $("#ddl_Location").append(Locationdata);
                $(".ddlFilters").chosen({
                    no_results_text: "Oops, nothing found!",
                    width: "200px",
                });
                $("#ddl_Location").trigger("chosen:updated");

            },
            error: function(err) {
                alert(err);
            }
        });

    }
}



function IsCurrentUserMemberOfGroupOld() {
var  mygroup  = "Analyzer Users"//PME Resource Analyzer";
    var currentContext = new SP.ClientContext.get_current();
    var currentWeb = currentContext.get_web();
    var currentUser = currentContext.get_web().get_currentUser();
    currentContext.load(currentUser);
    var allGroups = currentWeb.get_siteGroups();
    currentContext.load(allGroups);
    var group = allGroups.getByName(mygroup);
    currentContext.load(group);
    var groupUsers = group.get_users();
    currentContext.load(groupUsers);
    currentContext.executeQueryAsync(OnSuccess, OnFailure);
    function OnSuccess(sender, args) {
        var groupUserEnumerator = groupUsers.getEnumerator();
        while (groupUserEnumerator.moveNext()) {
            var groupUser = groupUserEnumerator.get_current();
            if (groupUser.get_id() == currentUser.get_id()) {
                userInGroup = true;
                break;
            }
        }

        if (userInGroup) {
            var userID   = spUserId;
            $("#accessmsg").hide();
             $("#accessmsg").text("");
            $("#maindiv").show();
                        
setTimeout(function(){

var html="<ul id='legendul' style='display:none;' class='legend'>"+"<li class='static'>"+"<li><span class='idearow' style='margin-left:28px'></span><b> Ideas</b></li><br><br>"+
        "<li><span class='projectrow' style='margin-left:28px'></span><b> Projects</b></li>"+
        "</ul></li>";
        
        $("#zz14_RootAspMenu").after(html)

}, 2000);


arr_ProjectNo=[]
arr_ProjectStart=[];
arr_ProjectFinish=[]

$("#start").kendoDatePicker({
        change: changeDate,
          start: "year",
        depth: "year",
          format: "MMMM yyyy",
        value :"MM YYYY"
   });
   var datePicker = $("#start").data("kendoDatePicker");
    var todayDate = new Date(); 
        todayDate.setMonth(todayDate.getMonth() - 1); 		
    datePicker.value(todayDate);
    datePicker.trigger("change");

 $("#end").kendoDatePicker({
        change: changeDate,
          start: "year",
        depth: "year",
          format: "MMMM yyyy",
        value :"MM YYYY"
   });
   
   var datePicker2 = $("#end").data("kendoDatePicker");
    var todayDate2 = new Date();  
    var dt = new Date(todayDate2.setMonth( todayDate2.getMonth() + 25 ));
    datePicker2.value(dt);
    datePicker2.trigger("change");
   
    var datePicker = $("#start").data("kendoDatePicker");
var todayDate = new Date();   
todayDate.setMonth(todayDate.getMonth() - 1); 	                                
datePicker.value(todayDate);
datePicker.trigger("change");

        $.ajax({        	      
                          url: azurewebsites+'/Api/GanttUpdated_ProjectList/9FA7C3AC-3564-4836-9A50-8951792AF1B4/1 2020/2 2020',                              
                          type: 'GET',
                          async: false,
                          processData: false,
                          cache: false,              
                          contentType: false,
                          dataType: 'json',
                          success: function (data) {
                              
                             
                              
                          
                            OutputResponseTable
                            OutputResponseTable1
                           var ResponseTable= JSON.parse(data)
                          
                          var Ldata =[];
                          var Ddata =[];
                          
                       var GanttData = ResponseTable.Table;

         
                          strOptions=""
                          
                          for (var i = 0; i < GanttData.length; i++) 
                          {							
                             strOptions = strOptions + "<option  value='" + GanttData[i].Projectuid + "' >" + GanttData[i].Projectname + "</option>";
                             arr_ProjectNo.push(GanttData[i].Projectuid)
                             arr_ProjectStart.push(GanttData[i].Start)
                             arr_ProjectFinish.push(GanttData[i].Finish)
                             
                          }	
                        strOptions="<option  value=''></option>" + strOptions;
                        /*$("#drp_resources").text("");
                        $("#drp_resources").append(strOptions);
                        //$(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "150px",});
                        $("#drp_resources").chosen({no_results_text: "Oops, nothing found!",width: "1000px",search_contains: true}); 
                       $("#drp_resources").chosen({ search_contains: true });	
                        $(".chosen-select,.chosen-multiple-select").chosen({search_contains: true});	*/
                            var optional = $("#drp_resources").kendoMultiSelect({
                                autoClose: false,
                                tagMode: "single",
                                filter: "contains",
                                select: function(e) {
                                    
                                    
                                var dataItem = this.dataSource.view()[e.item.index()];
                                 //var cc = $("#drp_resources").val().length;
                                
                                var values = dataItem === "Select All" ? 
                                    $.map(this.dataSource.data(), function(dataItem) {
                                                    return dataItem;
                                                    
                                                    }) 
                                : this.value();
                                
                                drpValue = $("#drp_resources").val();
                                if(drpValue == null){
                                    drpValue = [];
                                }
                                drpValue.push(e.dataItem)
                                if(values.indexOf("Select All") != -1){
                                    drpValue = values;
                                     this.value(values);
                                }
                                else{
                                    this.value(drpValue);
                                } 
                                $($("#drp_resources").prev().find('span')[0]).show();
                                var id = $("#drp_resources");
                                $(id).closest('div').attr('Title',id.getKendoMultiSelect().value().sort().join(', '))
                                selectedDrp = true;
                                $('.k-input').eq(2).val('')
                                
                                
                            },
                            
                            change: function(e) {
                                            
                                        if(drpValue.indexOf("Select All") == -1 && selectedDrp){
                                                this.value(drpValue);
                                            }
                                            selectedDrp = false
                                            if($("#drp_resources").val() != null){
                                                if($("#drp_resources").val() == "Select All"){
                                                     var cc = $("#drp_resources").val().length;
                                                     $($("#drp_resources").prev().find('li')).text("Ideas / Projects (All)");
                                                     //$("#drp_resources").prev().find('input').css('margin-top','-25px');
                                                    // $("#drp_resources").prev().find('input').css('color','white');
                                                     $($("#drp_resources").prev().find('span')[0]).show();
                                                      
                                                }
                                                else
                                                {   
                                                    var b = $("#drp_resources").val();var cc='';
                                                    if(b.length > 1 && b.indexOf("Select All") != -1)
                                                        {
                                                            cc = $("#drp_resources").val().length-1;
                                                        }
                                                        else
                                                        {
                                                            cc = $("#drp_resources").val().length
                                                        }
        
                                                     //varcc = $("#drp_resources").val().length;
                                                     $($("#drp_resources").prev().find('li')).text("Ideas / Projects ("+cc+")");
                                                    // $("#drp_resources").prev().find('input').css('margin-top','-25px');
                                                    // $("#drp_resources").prev().find('input').css('color','white');
                                                      $($("#drp_resources").prev().find('span')[0]).show();
                                                }
                                            }
                                                else
                                                { 
                                                    
                                                    $("#drp_resources").prev().find('input').css('margin-top','0px');
                                                    $("#drp_resources").prev().find('input').val("Ideas / Projects");
                                                    $("#drp_resources").prev().find('input').css('width','150px');
                                                    /* setFilterReset();
                                                    $("#filtercontainer").hide(); */
                                                } 
                                                
                                                var multiar = [];
                                                filterApplied =  true;
                                                var item = e.item;
                                                var text = this.value();
                                                var id = $("#drp_resources");
                                                $(id).closest('div').attr('Title',id.getKendoMultiSelect().value().sort().join(', '))
                                                
                                                
                                        }								
                            }).data("kendoMultiSelect");

                            var arr = [];
                            arr.push("Select All");
                             for (var i = 0; i < GanttData.length; i++) 
                          {							
                            strOptions = strOptions + "<option  value='" + GanttData[i].Projectuid + "' >" + GanttData[i].Projectname + "</option>";
                             arr.push(GanttData[i].Projectname);
                             ddnid.push(GanttData[i].Projectuid);
                             ddntext.push(GanttData[i].Projectname);
                             allval.push({"value":GanttData[i].Projectuid,"text":GanttData[i].Projectname});
                             
                        
                          }	
                          
                            var dropdownlistF = $("#drp_resources").data("kendoMultiSelect");
                            dropdownlistF.setDataSource(arr);
                             //$('#drp_resources').closest(".k-widget").hide();
                        
                          },
                          error: function (err) {
                            alert(err);
                          }
                      });         	




                        $("#ddl_Organization").text("");
                        $("#ddl_Organization").append("<option class='clsOptiondefault' value='1'>Select Supervisor</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_Organization").trigger("chosen:updated");
                        
                        $("#ddl_GBU").text("");
                        $("#ddl_GBU").append("<option   value='1'>Select GBU</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",});
                        $("#ddl_GBU").trigger("chosen:updated");
                        
                        $("#ddl_Location").text("");
                        $("#ddl_Location").append("<option   value='1'>Select Location</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_Location").trigger("chosen:updated"); 	

                        $("#ddl_BUOwner").text("");
                        $("#ddl_BUOwner").append("<option   value='1'>Select BU Owner</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_BUOwner").trigger("chosen:updated");
                        
                        $("#ddl_HireStatus").text("");
                        $("#ddl_HireStatus").append("<option   value='1'>Hire Status</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_HireStatus").trigger("chosen:updated"); 
if(1==0){
            $.ajax({        	
        
                          url: azurewebsites+'/Api/GanttUpdated_ParameterList/9FA7C3AC-3564-4836-9A50-8951792AF1B4/1 2020/2 2020',                              
                          type: 'GET',
                          async: false,
                          processData: false,
                          cache: false,              
                          contentType: false,
                          dataType: 'json',
                          success: function (data) {
                            
                           var ResponseTable= JSON.parse(data)
                          
                          var Organizationdata ="";
                          var Locationdata ="";
                          var GBUdata ="";
                          var Ddata =[];
                          
                          var ParaData = ResponseTable.Table;
                          strOptions=""
                          
                          for (var i = 0; i < ParaData.length; i++) 
                          {	
                             if(ParaData[i].ParameterText=="Organization" )
                             {
                             Organizationdata = Organizationdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                             }
                             if(ParaData[i].ParameterText=="ResourceGBU" )
                             {
                             GBUdata = GBUdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                             }
                             if(ParaData[i].ParameterText=="ResourceLocation" )
                             {
                             Locationdata = Locationdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                             }
                            
                             
                          }	
                        Organizationdata="<option  value=''></option>" + Organizationdata;
                        GBUdata="<option  value=''></option>" + GBUdata;
                        Locationdata="<option  value=''></option>" + Locationdata;
                        
                        $("#ddl_Organization").text("");
                        $("#ddl_Organization").append(Organizationdata);
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_Organization").trigger("chosen:updated");
                        
                        $("#ddl_GBU").text("");
                        $("#ddl_GBU").append(GBUdata);
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",});
                        $("#ddl_GBU").trigger("chosen:updated");
                        
                        $("#ddl_Location").text("");
                        $("#ddl_Location").append(Locationdata);
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_Location").trigger("chosen:updated"); 							  
                        
                          },
                          error: function (err) {
                            alert(err);
                          }
                      });  
                      
                      $($('div.k-multiselect')[0]).hide();
                          setTimeout(function(){
$($('div.k-multiselect')[0]).show();
$($('div.k-multiselect')[0]).css('width','1103px')
$($('div.k-multiselect')[0]).css('margin-top','-22px')
$($('div.k-multiselect')[0]).css('margin-left','169px'),10})

}
        }
                else 
            {	
                userInGroup = false;
                //$("#MSOZoneCell_WebPartWPQ4").hide();
                
                $("#maindiv").hide();
                $("#accessmsg").show();
                $("#accessmsg").text("Access Denied*");


                
                
            }
    }
     function OnFailure(sender, args) {
         userInGroup = false;
         $("#accessmsg").hide();
         $("#accessmsg").text("");
         $("#maindiv").show();
        // $("#MSOZoneCell_WebPartWPQ4").show();
         
setTimeout(function(){

var html="<ul id='legendul' style='display:none;' class='legend'>"+"<li class='static'>"+"<li><span class='idearow' style='margin-left:28px'></span><b> Ideas</b></li><br><br>"+
        "<li><span class='projectrow' style='margin-left:28px'></span><b> Projects</b></li>"+
        "</ul></li>";
        
        $("#zz14_RootAspMenu").after(html)

}, 2000);


arr_ProjectNo=[]
arr_ProjectStart=[];
arr_ProjectFinish=[]

$("#start").kendoDatePicker({
        change: changeDate,
          start: "year",
        depth: "year",
          format: "MMMM yyyy",
        value :"MM YYYY"
   });
   var datePicker = $("#start").data("kendoDatePicker");
    var todayDate = new Date(); 
        todayDate.setMonth(todayDate.getMonth() - 1); 		
    datePicker.value(todayDate);
    datePicker.trigger("change");

 $("#end").kendoDatePicker({
        change: changeDate,
          start: "year",
        depth: "year",
          format: "MMMM yyyy",
        value :"MM YYYY"
   });
   
   var datePicker2 = $("#end").data("kendoDatePicker");
    var todayDate2 = new Date();  
    var dt = new Date(todayDate2.setMonth( todayDate2.getMonth() + 25 ));
    datePicker2.value(dt);
    datePicker2.trigger("change");
   
    var datePicker = $("#start").data("kendoDatePicker");
var todayDate = new Date();   
var GanttData;
var drpValue = [];
var selectedDrp = false;
todayDate.setMonth(todayDate.getMonth() - 1); 	                                
datePicker.value(todayDate);
datePicker.trigger("change");

        $.ajax({        	      
                          url: azurewebsites+'/Api/GanttUpdated_ProjectList/9FA7C3AC-3564-4836-9A50-8951792AF1B4/1 2020/2 2020',                              
                          type: 'GET',
                          async: false,
                          processData: false,
                          cache: false,              
                          contentType: false,
                          dataType: 'json',
                          success: function (data) {
                              
                            $($('div.k-multiselect')[0]).hide() 
                              
                         
                            OutputResponseTable
                            OutputResponseTable1
                           var ResponseTable= JSON.parse(data)
                          
                          var Ldata =[];
                          var Ddata =[];
                          
                         var GanttData = ResponseTable.Table;

                        
                          strOptions=""
                          
                          for (var i = 0; i < GanttData.length; i++) 
                          {							
                             strOptions = strOptions + "<option  value='" + GanttData[i].Projectuid + "' >" + GanttData[i].Projectname + "</option>";
                             arr_ProjectNo.push(GanttData[i].Projectuid)
                             arr_ProjectStart.push(GanttData[i].Start)
                             arr_ProjectFinish.push(GanttData[i].Finish)
                             
                          }	//failure
                        strOptions="<option  value=''></option>" + strOptions;
                    
                            $('#drp_resources').closest(".k-widget").hide();	
                        
                        /*$("#drp_resources").text("");
                        $("#drp_resources").append(strOptions);
                        //$(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "150px",});
                        $("#drp_resources").chosen({no_results_text: "Oops, nothing found!",width: "1000px",search_contains: true}); 
                       $("#drp_resources").chosen({ search_contains: true });	
                        $(".chosen-select,.chosen-multiple-select").chosen({search_contains: true});	*/
                            var optional = $("#drp_resources").kendoMultiSelect({
                                autoClose: false,
                                tagMode: "single",
                                filter: "contains",
                            
                                select: function(e) {
                                    
        
                                var dataItem = this.dataSource.view()[e.item.index()];
                                 //var cc = $("#drp_resources").val().length;
                                
                                var values = dataItem === "Select All" ? 
                                    $.map(this.dataSource.data(), function(dataItem) {
                                                    return dataItem;
                                                    
                                                    }) 
                                : this.value();
                                 drpValue = $("#drp_resources").val();
                                if(drpValue == null){
                                    drpValue = [];
                                }
                                drpValue.push(e.dataItem)
                                if(values.indexOf("Select All") != -1){
                                    drpValue = values;
                                     this.value(values);
                                }
                                else{
                                    this.value(drpValue);
                                } 
                                $($("#drp_resources").prev().find('span')[0]).show();
                                var id = $("#drp_resources");
                                $(id).closest('div').attr('Title',id.getKendoMultiSelect().value().sort().join(', '))
                                selectedDrp = true;
                                $('.k-input').eq(2).val('')
                            },
                            
                            change: function(e) {
                                
                                //$($("#drp_resources").closest('div').next().next().find('div').find('input')[0]).css('width','25px');
                                
                                            if(drpValue.indexOf("Select All") == -1 && selectedDrp){
                                                this.value(drpValue);
                                            }
                                            selectedDrp = false
                                            if($("#drp_resources").val() != null){
                                                if($("#drp_resources").val() == "Select All"){
                                                     var cc = $("#drp_resources").val().length;
                                                     $($("#drp_resources").prev().find('li')).text("Ideas / Projects (All)");
                                                     //$("#drp_resources").prev().find('input').css('margin-top','-25px');
                                                    // $("#drp_resources").prev().find('input').css('color','white');
                                                     $($("#drp_resources").prev().find('span')[0]).show();
                                                      
                                                }
                                                else
                                                {   
                                                    var b = $("#drp_resources").val();var cc='';
                                                    if(b.length > 1 && b.indexOf("Select All") != -1)
                                                        {
                                                            cc = $("#drp_resources").val().length-1;
                                                        }
                                                        else
                                                        {
                                                            cc = $("#drp_resources").val().length
                                                        }
        
                                                     //varcc = $("#drp_resources").val().length;
                                                     $($("#drp_resources").prev().find('li')).text("Ideas / Projects ("+cc+")");
                                                    // $("#drp_resources").prev().find('input').css('margin-top','-25px');
                                                    // $("#drp_resources").prev().find('input').css('color','white');
                                                      $($("#drp_resources").prev().find('span')[0]).show();
                                                }
                                            }
                                                else
                                                { 
                                                    
                                                    $("#drp_resources").prev().find('input').css('margin-top','0px');
                                                    $("#drp_resources").prev().find('input').val("Ideas / Projects");
                                                    $("#drp_resources").prev().find('input').css('width','150px');
                                                    /* setFilterReset();
                                                    $("#filtercontainer").hide(); */
                                                } 
                                                
                                                var multiar = [];
                                                filterApplied =  true;
                                                var item = e.item;
                                                var text = this.value();
                                                var id = $("#drp_resources");
                                                $(id).closest('div').attr('Title',id.getKendoMultiSelect().value().sort().join(', '))
                                                
                                        }								
                            }).data("kendoMultiSelect");
                            
                            var arr = [];
                             arr.push("Select All");
                             for (var i = 0; i < GanttData.length; i++) 
                          {							
                            strOptions = strOptions + "<option  value='" + GanttData[i].Projectuid + "' >" + GanttData[i].Projectname + "</option>";
                             arr.push(GanttData[i].Projectname);
                             
                             ddnid.push(GanttData[i].Projectuid);
                             ddntext.push(GanttData[i].Projectname);
                             allval.push({"value":GanttData[i].Projectuid,"text":GanttData[i].Projectname});
                             
                        
                          }	
                          
                            var dropdownlistF = $("#drp_resources").data("kendoMultiSelect");
                            dropdownlistF.setDataSource(arr);
                            $('#drp_resources').closest(".k-widget").hide();
                          },
                          error: function (err) {
                            alert(err);
                          }
                      });         	
  $($('div.k-multiselect')[0]).hide();
  $('#drp_resources').closest(".k-widget").show();
setTimeout(function(){
$($('div.k-multiselect')[0]).show();
$($('div.k-multiselect')[0]).css('width','1103px')
$($('div.k-multiselect')[0]).css('margin-top','-22px')
$($('div.k-multiselect')[0]).css('margin-left','169px'),10})

                $("#ddl_Organization").text("");
                        $("#ddl_Organization").append("<option class='clsOptiondefault' value='1'>Select Supervisor</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_Organization").trigger("chosen:updated");
                        
                        $("#ddl_GBU").text("");
                        $("#ddl_GBU").append("<option   value='1'>Select GBU</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",});
                        $("#ddl_GBU").trigger("chosen:updated");
                        
                        $("#ddl_Location").text("");
                        $("#ddl_Location").append("<option   value='1'>Select Location</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_Location").trigger("chosen:updated"); 	

                        $("#ddl_BUOwner").text("");
                        $("#ddl_BUOwner").append("<option   value='1'>Select BU Owner</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_BUOwner").trigger("chosen:updated");
                        
                        $("#ddl_HireStatus").text("");
                        $("#ddl_HireStatus").append("<option   value='1'>Hire Status</option>");
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_HireStatus").trigger("chosen:updated"); 
if(1==0){
            $.ajax({        	
        
                          url: azurewebsites+'/Api/GanttUpdated_ParameterList/9FA7C3AC-3564-4836-9A50-8951792AF1B4/1 2020/2 2020',                              
                          type: 'GET',
                          async: false,
                          processData: false,
                          cache: false,              
                          contentType: false,
                          dataType: 'json',
                          success: function (data) {
                            
                           var ResponseTable= JSON.parse(data)
                          
                          var Organizationdata ="";
                          var Locationdata ="";
                          var GBUdata ="";
                          var Ddata =[];
                          
                          var ParaData = ResponseTable.Table;
                          strOptions=""
                          
                          for (var i = 0; i < ParaData.length; i++) 
                          {	
                             if(ParaData[i].ParameterText=="Organization" )
                             {
                             Organizationdata = Organizationdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                             }
                             if(ParaData[i].ParameterText=="ResourceGBU" )
                             {
                             GBUdata = GBUdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                             }
                             if(ParaData[i].ParameterText=="ResourceLocation" )
                             {
                             Locationdata = Locationdata + "<option  value='" + ParaData[i].ParameterValue + "' >" + ParaData[i].ParameterValue + "</option>";
                             }
                            
                             
                          }	
                        Organizationdata="<option  value=''></option>" + Organizationdata;
                        GBUdata="<option  value=''></option>" + GBUdata;
                        Locationdata="<option  value=''></option>" + Locationdata;
                        
                        $("#ddl_Organization").text("");
                        $("#ddl_Organization").append(Organizationdata);
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_Organization").trigger("chosen:updated");
                        
                        $("#ddl_GBU").text("");
                        $("#ddl_GBU").append(GBUdata);
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",});
                        $("#ddl_GBU").trigger("chosen:updated");
                        
                        $("#ddl_Location").text("");
                        $("#ddl_Location").append(Locationdata);
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",});
                        $("#ddl_Location").trigger("chosen:updated"); 							  
                        
                          },
                          error: function (err) {
                            alert(err);
                          }
                      });  

            }
    }

}





var ProjectFilterTable=[];
var globalValDrop=[];
var keynames=[];

var stk_Filter_1=[];
var stk_Filter_2=[];
var stk_Filter_3=[];
var stk_Filter_4=[];
var stk_Filter_5=[];




function filterDropdown()
{   			 
//Filterseries = [];
//$('#btn1').show();$('#btn2').show();
    ProjectFilterTable=[];
     var arrLocation=[];
     var arrSupervisor=[];
     var arrBUOwner=[];
     var arrGBU=[];
      var arrHireStatus=[];
//console.log(GanttData);
if($('#drp_resources').val()!=null)
{
        var singleObj = {};	
        var listOfObjects=[];
        var rvsls=[];
        
        
        var b = $('#drp_resources').val();
        
        if(b.length > 1 && b.indexOf("Select All") != -1)
        {
            let value = "Select All";
            b = b.filter(item => item !== value)
        }
        
        if(b == "Select All")
        {
                singleObj.FilterText = "Resourceuid";
                singleObj.FilterValue = ddnid.join('|');
            
        }
        else
        {
            for(var i = 0;i< b.length; i++)
            {
                var rvlue=ddnid[ddntext.indexOf(b[i])];
                rvsls.push(rvlue);
                singleObj.FilterText = "Resourceuid";
                singleObj.FilterValue = rvsls.join('|');
            }	
        }
        
        
        //singleObj.FilterText = "Resourceuid";
        //singleObj.FilterValue = rvsls.join('|');
        
        listOfObjects.push(singleObj); 
        
        var allData ="'"+ JSON.stringify(listOfObjects)+"'";
        
        $.ajax({ 
                    
                          url: azurewebsites+'/Api/GanttUpdated_ParameterList/WithFilters',
                          type: "PUT",
                          data: allData,//JSON.stringify(allData),
                          contentType: "application/json; charset=utf-8",
                          dataType: "json",
                          success: function (data) {
                              ProjectFilterTable= JSON.parse(data);
                              ProjectFilterTable=ProjectFilterTable.Table
                              
                              globalValDrop = [];keynames=[];
                        for(i=0;i<ProjectFilterTable.length;i++){
                            var item = resGetResources.value.filter(function(x){
                                return x.ResourceId == ProjectFilterTable[i].Resourceid
                            });
                            if(item.length != 0){
                                globalValDrop.push(item[0]);
                            }
                            
                        }
                        
                        for(k in globalValDrop[0]){
                             keynames.push(k);
                         }
                         
                         $('td[name="td_filter"]').remove();
                         createResourceFilterdropdowns()
                                                         
                          },
                          error: function (err) {}			
        
        });


}
else
{							
                        /*  $('td[name="td_filter"]').each(function(x){
                                var nm = ($(this).find('select')[0].id); 
                                var ddl = $("#"+nm).data("kendoMultiSelect"); ddl.dataSource.data([]); 
                                ddl.value(""); ddl.text(""); 
                                                            
                                
                        })
                        
                        $('td[name="td_filter"]').each(function(x){
                                var nm1 = ($(this).find('select')[1].id); 
                                var ddl1 = $("#"+nm1).data("kendoMultiSelect"); ddl1.dataSource.data([]); 
                                ddl1.value(""); ddl1.text(""); 
                            
                                
                        })
                        
                        $('td[name="td_filter"]').each(function(x){
                                var nm2 = ($(this).find('select')[2].id); 
                                var ddl2 = $("#"+nm2).data("kendoMultiSelect"); ddl2.dataSource.data([]); 
                                ddl2.value(""); ddl2.text(""); 
                                                            
                        })
                        
                        $('td[name="td_filter"]').each(function(x){
                                var nm3 = ($(this).find('select')[3].id); 
                                var ddl3 = $("#"+nm3).data("kendoMultiSelect"); ddl3.dataSource.data([]); 
                                ddl3.value(""); ddl3.text(""); 
                                                            
                        })  */

}


}


var filterApplied = false;
var global_onchangeEle = ""


$(function(){
/*
 * this swallows backspace keys on any non-input element.
 * stops backspace -> back
 */
var rx = /INPUT|SELECT|TEXTAREA|li|ul/i;

$(document).bind("keydown keypress", function(e){
    if( e.which == 8 ){ // 8 == backspace
        if(rx.test(e.target.tagName) || e.target.disabled || e.target.readOnly ){
           // e.preventDefault();
        }
    }
});
});

    
    
    $('#s4-workspace').scroll(function () { 						
            if($('.sortingtypeListitems').is(":visible")){
                    $('.sortingtypeListanchor').click();
            }
            if($('.sortingtypeListitems1').is(":visible")){
                    $('.sortingtypeListanchor').click();
            }
    });
    var lock = true;
    var abc = '';
    $('#s4-workspace').click(function(e){
    
    $($("#idealblspan").next().find('span')[0]).click(function(e){
        //alert("ED")
        setFilterReset();
        
        });
        
    
      if(e.target.className != 'k-multiselect-wrap k-floatwrap' || global_onchangeEle != $(e.target).find('ul')[0].id.replace("_taglist","") ){
          if(global_onchangeEle != ""){
              lock = false;
              $('#'+global_onchangeEle).data("kendoMultiSelect").trigger("change");
              lock = true;
              global_onchangeEle = ''
          }
      }
    // if(e.target.className != 'k-multiselect-wrap k-floatwrap'){
    if(e.target.className  == 'k-input' || e.target.className  == 'k-button k-state-hover'  || e.target.className  == 'k-multiselect-wrap k-floatwrap' ||  
       e.target.className  == "k-widget k-multiselect k-multiselect-clearable k-state-hover k-state-focused k-state-border-down" )
       {
    
     
            //clickFilterNameprev.find('li').text('');
            
            if(clickFilterNameprevrev.length > 0){
            
            if(clickFilterNameprevrev[0].innerHTML==clickFilterNameprev[0].innerHTML)
             {
              // alert("same");
                clickFilterNameprevrev.find('li').text('')
                clickFilterNameprev.find('li').text('');
             }
             else
             {
                 
                  if(clickFilterNameprevrev.next().val() != undefined){
                      if(clickFilterNameprevrev.next().val() != null){
                          var cc = clickFilterNameprevrev.next().val().length;
                          clickFilterNameprevrev.find('li').text(clickFilterNameprevrev.next().attr('data-placeholder')+ " ("+cc+")");
                        
                            clickFilterNameprevrev.find('span').show();
                             clickFilterNameprevrev.find('input').css("disabled","disabled");
                             clickFilterNameprevrev.find('input').css('width','25px');
                            }
                            else
                            { 
                                clickFilterNameprevrev.find('input').css('margin-top','0px');
                                clickFilterNameprevrev.find('input').css('width','25px');
                                //clickFilterNameprevrev.find('input').val(clickFilterNameprevrev.next().attr('data-placeholder'));
                                clickFilterNameprevrev.find('input').val(clickFilterNameprevrev.find('input').val())
                                
                            }
                    }
                     else{
                     
                         if(clickFilterNameprevrev.find('select').val() != null){
                           var cc = clickFilterNameprevrev.find('select').val().length;
                          clickFilterNameprevrev.find('li').text(clickFilterNameprevrev.find('select').attr('data-placeholder')+ " ("+cc+")");
                        clickFilterNameprevrev.find('span').show();
                         clickFilterNameprevrev.find('input').css("disabled","disabled");
                        // clickFilterNameprevrev.find('input').css('margin-top','-25px');
                        }
                        else
                        { 
                            clickFilterNameprevrev.find('input').css('margin-top','0px');
                            //clickFilterNameprevrev.find('input').val(clickFilterNameprevrev.find('select').attr('data-placeholder'));
                            clickFilterNameprevrev.find('input').val(clickFilterNameprevrev.find('input').val())
                            
                        }
                    }
             }	
        }
        
      return;
    }
      if(clickFilterName.length > 0){
          
          if(clickFilterName.next().val() != undefined){
              if(clickFilterName.next().val() != null){
                  var cc = clickFilterName.next().val().length;
                clickFilterName.find('li').text(clickFilterName.next().attr('data-placeholder')+ " ("+cc+")");
                
                 clickFilterName.find('span').show();
                 clickFilterName.find('input').css("disabled","disabled");
                 clickFilterName.find('input').css('width','25px');
                }
                else
                { 
                    clickFilterName.find('input').css('margin-top','0px');
                    clickFilterName.find('input').css('width','25px');
                    clickFilterName.find('input').val(clickFilterName.next().attr('data-placeholder'));
                    
                }
             }
             else{
                 if(clickFilterName.find('select').val() != null){
                   var cc = clickFilterName.find('select').val().length;
                clickFilterName.find('li').text(clickFilterName.find('select').attr('data-placeholder')+ " ("+cc+")");
                
                
             
                
                 clickFilterName.find('span').show();
                 clickFilterName.find('input').css("disabled","disabled");
                 clickFilterName.find('input').css('width','10px');
                }
                else
                { 
                    clickFilterName.find('input').css('margin-top','0px');
                    clickFilterName.find('input').val(clickFilterName.find('select').attr('data-placeholder'));
                     clickFilterName.find('input').css('width','180px');
                    
                }
             }
                
      }
    // }
        if(e.target.className != 'sortingtypeListanchor' ){
            if($(e.target).closest('ul')[0] != undefined){
                if($(e.target).closest('ul')[0].className != "sortingtypeListitems"){
                    if($('.sortingtypeListitems').is(":visible")){
                        $('.sortingtypeListanchor').click();
                    }
                }
            }
            else{
                if($('.sortingtypeListitems').is(":visible")){
                    $('.sortingtypeListanchor').click();
                }
                
            }				
        }
        if(e.target.className != 'sortingtypeListanchor1' ){
            if($(e.target).closest('ul')[0] != undefined){
                if($(e.target).closest('ul')[0].className != "sortingtypeListitems"){
                    if($('.sortingtypeListitems1').is(":visible")){
                        $('.sortingtypeListanchor1').click();
                    }
                }
            }
            else{
                if($('.sortingtypeListitems1').is(":visible")){
                    $('.sortingtypeListanchor1').click();
                }
                
            }				
        }
    });
    
    var lock1 = false;
    $($("#drp_resources_listbox").find('li')[0]).click(function(e){
        lock1 = true;
    });
    
    var lastsefilter1 = null;
    var lastsefilter2=  null
    var lastsefilter3= null;
    //$('#dynmaicddn').append(x'<td><sxalabel style="padding-right:73px">Resource Filters:</label></td>');
    function createResourceFilterdropdowns()
    {
        $('#btns1').show();
        //$('#btns2').show();
        //filterSwitch = true
        var counter = 0;
        var dropdownlistF1 = '';
        var dropdownlistF2 = '';
        var dropdownlistF3 = '';
        var dropdownlistF4 = '';
        var dropdownlistF5 = '';
        if(ResFilter.length > 0){
        
        //var chtrue = false
            $.each(ResFilter, function (indx, MGrid) {
            
                if(counter < 4){
                   //devops change if(keynames.indexOf(MGrid.ProjectFilter.replace(/\s+/g, '')) != -1){
                        if(MGrid.Display){
                            //$('#dynmaicddn').append('<td name = "td_filter" style=""><label name="filterlb"><b>'+MGrid.ProjectFilter+'</b></label><select id="optional'+MGrid.ProjectFilter.replace(/\s+/g, '')+'" multiple="multiple" data-placeholder="'+MGrid.ProjectFilter+'"></td>');
                            //$('#dynmaicddn').append('<td name = "td_filter" style=""><select id="optional'+MGrid.ProjectFilter.replace(/\s+/g, '')+'" multiple="multiple" onclick="process();" data-placeholder="'+MGrid.ProjectFilter+'"></td>');
                            
                            $('#dynmaicddn').append('<td name = "td_filter" data-stkfilter='+ (counter+1).toString() +' style=""><select  id="optional'+MGrid.ProjectFilter.replace(/\s+/g, '')+'" multiple="multiple" onclick="process();" data-placeholder="'+MGrid.ProjectFilter+'"></td>');
                            
                            $('#lbltd').show()
                            $('#lbltd').after($("#dynmaicddn"));
                            $('#dynmaicddn').append($("#btns1"));
                            //
                            $('#btns2').show();
                            $("#btns1").append($("#btns2"))
                            
                            //$('#fileroptionRows_Labels').append('<td><label>'+MGrid.ProjectFilter+':</label></td>')
                            counter ++;
                            var optional = $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).kendoMultiSelect({
                                autoClose: false,
                                tagMode: "single",
                                filter: "contains",
                                
                                select: function(e) {
                                    
                                
                                //$("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').val("")
                                
                                },
                            
                                change: function(e) {
                                
                                            global_onchangeEle = ""
                                            global_onchangeEle = this.element[0].id;
                                
                                            var ftr=$("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).closest('td').attr('data-stkfilter')
                                            var selftrvals= $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).val();
                                            var id= MGrid.ProjectFilter.replace(/\s+/g, '');
                                            ManageStkyFilters(ftr,selftrvals,id);
                                            
                                //$("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css("width","25px");
                                $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css("width","0px");
                                        if($("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).val() != null){
                                                var cc = $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).val().length;
                                                $("#"+global_onchangeEle).prev().find('li').text(MGrid.ProjectFilter+ " ("+cc+")");
                                                
                                                                                            
                                            $(document).bind("keydown keypress", function(e){
                                                    if( e.which == 8 ){ 
                                                        if(e.target.value == MGrid.ProjectFilter){
                                                            e.preventDefault();
                                                        }
                                                    }
                                                }); 
                                                
                                                 $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('span').show();
                                                 $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css("disabled","disabled");
                                                  $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css("margin-top","0px");
                                                  //$("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css("width","25px");
                                                  
                                                  $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css("caret-color","transparent");
                                                  
                                                 
                                                
                                                }
                                                else
                                                { 
                                                    $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css('width','150px');
                                                    $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css('margin-top','0px');
                                                    $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').val(MGrid.ProjectFilter);
                                                    
                                                } 
                                                
                                                //abc = $("#"+global_onchangeEle).prev().find('li').text();
                                                
                                            if(!lock)
                                            {
                                               var multiar = [];
                                                filterApplied =  true;
                                                var item = e.item;
                                                var text = this.value();
                                                
                                                var id = $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, ''));
                                                $(id).closest('div').attr('Title',id.getKendoMultiSelect().value().sort().join(', '))
                                                
                                                if(id.val() == null){multiar = [];}
                                                multiar = text;
                                                selectedFilterDropdown(multiar,MGrid.ProjectFilter.replace(/\s+/g, ''),MGrid.ProjectFilter); 
                                                lastsefilter1 = multiar;
                                                lastsefilter2=  MGrid.ProjectFilter.replace(/\s+/g, '');
                                                lastsefilter3= MGrid.ProjectFilter;
                                            }
                                            else
                                            {
                                                if($("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).val() != null){
                                                var cc = $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).val().length;
                                                $("#"+global_onchangeEle).prev().find('li').text(MGrid.ProjectFilter+ " ("+cc+")");
                                                 $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('span').show();
                                                 $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css("disabled","disabled");
                                                }
                                                else
                                                { 
                                                    $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').css('margin-top','0px');
                                                    //$("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').val(MGrid.ProjectFilter);
                                                    $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).prev().find('input').val('');
                                                } 
                                                
                                                /*var multiar = [];
                                                filterApplied =  true;
                                                var item = e.item;
                                                var text = this.value();
                                                
                                                var id = $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, ''));
                                                $(id).closest('div').attr('Title',id.getKendoMultiSelect().value().sort().join(', '))
                                                if(id.val() == null){multiar = [];}
                                                multiar = text;
                                                selectedFilterDropdown(multiar,MGrid.ProjectFilter.replace(/\s+/g, ''),MGrid.ProjectFilter); */
                                                
                                            }
                                            
                                            
                                        },
                                dataBound: function(e) {
                                    
                                }

                            }).data("kendoMultiSelect");
                            var arr = [];
                            /* if(filteredAr.length>0){
                                globalValDrop = filteredAr;
                            } */
                            for(i=0;i<globalValDrop.length;i++){
                                if(arr.indexOf(globalValDrop[i][MGrid.ProjectFilter.replace(/\s+/g, '')]) == -1){
                                    
                                    arr.push(globalValDrop[i][MGrid.ProjectFilter.replace(/\s+/g, '')])
                                }
                                
                            }
                            for(i=0;i<arr.length;i++){
                                if(arr[i] == null){
                                    arr[i] = "Empty"
                                }if(arr[i] == true){
                                    arr[i] = "true"
                                }if(arr[i] == false){
                                    arr[i] = "false"
                                }
                            }
                            arr = arr.sort();
                            var dropdownlistF = $("#optional"+MGrid.ProjectFilter.replace(/\s+/g, '')).data("kendoMultiSelect");
                            dropdownlistF.setDataSource(arr);
                            //multiFiltertype = MGrid.ProjectFilter
                            
                            if(counter==1){
                                dropdownlistF1 = dropdownlistF;
                            }
                            if(counter==2){
                                dropdownlistF2 = dropdownlistF;
                            }
                            if(counter==3){
                                dropdownlistF3 = dropdownlistF;
                            }
                            if(counter==4){
                                dropdownlistF4 = dropdownlistF;
                            }
                            /* if(counter==1)
                            {	if(stk_Filter_1.length>0)
                                {
                                    dropdownlistF.value(stk_Filter_1[0]);
                                    
                                }										
                                                                    
                            }
                            if(counter==2)
                            {	if(stk_Filter_2.length>0)
                                {
                                    dropdownlistF.value(stk_Filter_2[0]);
                                    //lock = false;
                                    //dropdownlistF.trigger("change");
                                }
                            }
                            if(counter==3)
                            {	if(stk_Filter_3.length>0)
                                {
                                    dropdownlistF.value(stk_Filter_3[0]);
                                    //lock = false;
                                    //dropdownlistF.trigger("change");
                                }
                            }
                            if(counter==4)
                            {	if(stk_Filter_4.length>0)
                                {
                                    dropdownlistF.value(stk_Filter_4[0]);
                                    //lock = false;
                                    //dropdownlistF.trigger("change");
                                }
                            }
                            
                            lock = true;
                            dropdownlistF.trigger("change"); */
                            if(Filterseries.length > 0){
                                var ele = Filterseries[Filterseries.length-1];
                                var elename = dropdownlistF.element.attr('data-placeholder').replace(/\s+/g, '');
                                if(ele == elename){
                                    dropdownlistF5 = dropdownlistF;
                                }
                            }
                        }
                    
                    //Devops change}
                }
            });
                                                
            if(stk_Filter_1.length>0)
            {
                var dt = stk_Filter_1[0];
                var dtl = stk_Filter_1[0].length;
                var tardt = dropdownlistF1.dataSource.data();
             
                var trarr = [];
                for(i=0;i<dtl;i++){
                    if(tardt.indexOf(dt[i]) != -1){
                        trarr.push(stk_Filter_1[0][i]);
                    }
                }
                dropdownlistF1.value(trarr);
                 lock = true;
                dropdownlistF1.trigger("change");
            }										
            if(stk_Filter_2.length>0)
            {
                var dt = stk_Filter_2[0];
                var dtl = stk_Filter_2[0].length;
                var tardt = dropdownlistF2.dataSource.data();
                var trarr = [];
                for(i=0;i<dtl;i++){
                    if(tardt.indexOf(dt[i]) != -1){
                        trarr.push(stk_Filter_2[0][i]);							
                    }
                }
                dropdownlistF2.value(trarr);
                lock = true;
                dropdownlistF2.trigger("change"); 
            }
            if(stk_Filter_3.length>0)
            {
                var dt = stk_Filter_3[0];
                var dtl = stk_Filter_3[0].length;
                var tardt = dropdownlistF3.dataSource.data();
                var trarr = [];
                for(i=0;i<dtl;i++){
                    if(tardt.indexOf(dt[i]) != -1){
                        trarr.push(stk_Filter_3[0][i]);
                        
                    }
                }
                dropdownlistF3.value(trarr);
                lock = true;
                dropdownlistF3.trigger("change");
            }
            if(stk_Filter_4.length>0)
            {
                var dt = stk_Filter_4[0];
                var dtl = stk_Filter_4[0].length;
                var tardt = dropdownlistF4.dataSource.data();
                for(i=0;i<dtl;i++){
                    if(tardt.indexOf(dt[i]) != -1){
                        trarr.push(stk_Filter_4[0][i]);
                    }
                }
                dropdownlistF4.value(trarr);
                 lock = true;
                dropdownlistF4.trigger("change");
            }
            global_onchangeEle = "";
            /* if(Filterseries.length > 0){
                var filt = Filterseries[Filterseries.length-1]
                var dropdownlistS = $("#optional"+filt).data("kendoMultiSelect");
                 lock = false;
                dropdownlistS.trigger("change"); 
            } */
            
            /* if(Filterseries.length > 0){
                if(dropdownlistF5.element){
                    var vals = dropdownlistF5.value();
                    var ele = dropdownlistF5.element.attr('data-placeholder').replace(/\s+/g, '');
                    var eleN = dropdownlistF5.element.attr('data-placeholder');
                    
                    selectedFilterDropdown(vals,ele,eleN); 
                }
                
            } */				
            /* lock = true;
            dropdownlistF.trigger("change"); */				
        }
            //filterSwitch = false;
            
            $('td[name="td_filter"]').each(function(x){
                    $(this).find('div.k-multiselect-wrap').css('width','220px');
                    if($(this).find('select').val() == null || $(this).find('select').val() == '')
                        {
                        $(this).find('input.k-input').css('width','150px');
                        }
                });
                
            
                
                setTimeout(function(){
             
             
                  $($('#s4-workspace').find('select')[1]).closest('div').click(function(e){ 
                var a = $(this).closest('div').find('li').text();
                $(this).closest('div').find('input').css("caret-color","black");
                    if($(this).find('select').val() == null)
                    {						}
                    else
                    {
                    if($(this).find('select').val().length > 0){
                        $(this).closest('div').find('li').text('');
                    }		
                    }
                    
                });
                
                $($('#s4-workspace').find('select')[2]).closest('div').click(function(e){ 
                $(this).closest('div').find('input').css("caret-color","black");
                    if($(this).find('select').val() == null)
                    {						}
                    else
                    {
                    if($(this).find('select').val().length > 0){
                        $(this).closest('div').find('li').text('');
                    }		
                    }
                    
                });
                
                $($('#s4-workspace').find('select')[3]).closest('div').click(function(e){ 
                $(this).closest('div').find('input').css("caret-color","black");
                    if($(this).find('select').val() == null)
                    {						}
                    else
                    {
                    if($(this).find('select').val().length > 0){
                        $(this).closest('div').find('li').text('');
                    }		
                    }
                    
                });
                
                $($('#s4-workspace').find('select')[4]).closest('div').click(function(e){ 
                $(this).closest('div').find('input').css("caret-color","black");
                    if($(this).find('select').val() == null)
                    {						}
                    else
                    {
                        if($(this).find('select').val().length > 0){
                            $(this).closest('div').find('li').text('');
                    }		
                    }
                });
                
                 
                
                 
                 // $($('td[name="td_filter"]')).find('div.k-multiselect-wrap').on('click', function() { 
                 
                $($('td[name="td_filter"]')).find('div.k-widget').on('click', function() { 

                    if(clickFilterNameprev == '')
                    {
                        clickFilterNameprev    = $(this);
                        clickFilterNameprevrev = $(this);
                    }
                    else
                    {
                         if(clickFilterNameprev!=$(this))
                        {
                            clickFilterNameprevrev=clickFilterNameprev;
                            clickFilterNameprev= $(this);
                        }
                        else
                        {
                         clickFilterNameprevsame = $(this);
                        }
                    }
                    
                });
            
        
                 $("#btn1").css("margin-top","5px"); $("#btn2").css("margin-top","5px");
                  
                $($('td[name="td_filter"]')[0]).find('div').on('click', function() { 
                    var a = $(this).find('select').attr('data-placeholder');
                    clickFilterName = $(this)						
                    $(this).find('select').prev().find('input').css('width','180px').css('color','#a2a2a2'); 
                    
                });
                $($('td[name="td_filter"]')[1]).find('div').on('click', function() { 
                    var a = $(this).find('select').attr('data-placeholder'); 
                    clickFilterName = $(this)						
                    $(this).find('select').prev().find('input').css('width','180px').css('color','#a2a2a2'); 
                });
                $($('td[name="td_filter"]')[2]).find('div').on('click', function() { 
                    var a = $(this).find('select').attr('data-placeholder'); 
                    clickFilterName = $(this)				
                    $(this).find('select').prev().find('input').css('width','180px').css('color','#a2a2a2'); 
                });
                $($('td[name="td_filter"]')[3]).find('div').on('click', function() { 
                    var a = $(this).find('select').attr('data-placeholder'); 
                    clickFilterName = $(this)				
                    $(this).find('select').prev().find('input').css('width','180px').css('color','#a2a2a2'); 
                });
                
                
                
              },10);
              if(lastsefilter1 != null){
              selectedFilterDropdown(lastsefilter1,lastsefilter2,lastsefilter3); 
              }
             
    }
    
    function process(){
    alert("ss")
    }
    
    
    function ManageStkyFilters(idx, selvals,idd)
    {
        
        if(idx=="1")
        {
        stk_Filter_1=[];
        if(selvals != null)
        stk_Filter_1.push(selvals)
        
        }
        if(idx=="2")
        {
        stk_Filter_2=[];
        if(selvals != null)
        stk_Filter_2.push(selvals)
        }
        if(idx=="3")
        {
        stk_Filter_3=[];
        if(selvals != null)
        stk_Filter_3.push(selvals)
        }
        if(idx=="4")
        {
        stk_Filter_4=[];
        if(selvals != null) 
        stk_Filter_4.push(selvals)
        }
            
    }
    
    
    var clickFilterName = '';
    var clickFilterNameprev = '';
    var clickFilterNameprevrev = '';
     var clickFilterNameprevsame = '';
    var multiarList = [];
    var multiFiltertype;
    var filterSwitch = false;
    var createdfilters = false;
    var filteredAr = [];
    var filterGrid = false;
    var globalcount = 0;		
    var Filterseries = [];
    var clearF = false;
    function selectedFilterDropdown(multiar,mft,mftspace){
        //console.log(multiar);
        if(Filterseries.indexOf(mft) == -1){
            Filterseries.push(mft);
            clearF = true;
        }
        
        if(multiar.length == 0){
            for( var i = 0; i < Filterseries.length; i++){    
                if ( Filterseries[i] === mft) { 				
                    Filterseries.splice(i, 1); 
                }				
            }
            clearF = false;
        }
        filterSwitch = true
        /* for(i=0;i<multiar.length;i++){
            if(multiar[i] == "Empty"){
                multiar[i] = null;
            }
        }
        multiarList = multiar;
        
        multiFiltertype =mft; */
        //getManagers();
        filterSwitch = false;
        //$($('td[name="td_filter"]').find('li')[0]).text(mft);
        var fu = globalValDrop;
        filterGrid = false;
        selectedList = [];
        selectedList_Field = [];
        $('td[name="td_filter"]').each(function(x){
            if($(this).find('select').val() != null){
                filterGrid = true;
                var nm = ($(this).find('select')[0].id).replace('optional','');
                var dropval = $(this).find('select').val();
                var obj = {};
                obj.id = nm;
                obj.filter = dropval
                selectedList.push(obj)
                //selectedList_Field.push()
                for(i=0;i<dropval.length;i++){
                    if(dropval[i] == "Empty"){
                        dropval[i] = null;
                    }
                     if(dropval[i] == "true"){
                        dropval[i] = true;
                    }
                    if(dropval[i] == "false"){
                        dropval[i] = false;
                    }
                }
                var filterSecman = fu.filter(function(x){
                    return dropval.includes(x[nm]);
                });
                fu = filterSecman
                //multiarList = Secman;
            }
            
        })
        if(fu.length == 0){
            var it = selectedList.filter(function(x){
                    return x.id == mft;
                });
            if(it.length > 0){
                var filterSecman = globalValDrop.filter(function(x){
                    return it[0].filter.includes(x[mft]);
                });
            fu = filterSecman;
            }
            
        }
        
        


        setotherdropdown(globalValDrop,fu,mft,multiar,mftspace);
        stickFilter = fu;
        //roleEngagementload(fu);
        filterGrid = false;
    }
    
    
$($('td[name="td_filter"]')[0]).each(function(x){ 
                $($(this).find('div')[0]).on('click', function() { 
                if($(this).find('select').val == null)
                {
                    var a = $(this).find('select').attr('data-placeholder'); 
                    $(this).find('select').prev().find('input').css('width','100px'); 
                    $(this).find('select').prev().find('input').val(a);
                }
            });
        });
        
        $($('td[name="td_filter"]')[0]).find('div').on('click', function() { 
                
                    var a = $(this).find('select').attr('data-placeholder'); 
                    $(this).find('select').prev().find('input').css('width','180px'); 
                    $(this).find('select').prev().find('input').val(a);
                
                
                
                
            });
        
        var globalStikyFil = []; 
    
    function setotherdropdown(Secman,fut,mft,multiar,mftspace){
        //Finalmultival = [];
        var fu = fut//globalValDrop;
        
        
        globalcount = 0;
        
        for(i=0;i<multiar.length;i++){
            if(multiar[i] == "Empty"){
                multiar[i] = null;
            }
            if(multiar[i] == "true"){
                multiar[i] = true;
            } 
            if(multiar[i] == "false"){
                multiar[i] = false;
            }
        }
        var filterSecman = fu.filter(function(x){
                        return multiar.includes(x[mft]);
                    });
        
        var d = filterSecman;
        globalStikyFil = filterSecman;
        if(d.length == globalValDrop.length){
            //d = fut
        }
        if(IsStrNullOrEmpty(multiar)){
            d = fut;
        }
        
        if(IsStrNullOrEmpty(multiar)){
            d = fut;
            globalStikyFil = fut;
        }
        
        $('td[name="td_filter"]').each(function(x){
            if($(this).find('select').val() == null){
                globalcount ++;
            }
        });
        /* if(globalcount == 3){
                    d = Secman;
                } */
        var c = d;
        $('td[name="td_filter"]').each(function(x){
            if($(this).find('select').val() == null){
                var nm = ($(this).find('select')[0].id).replace('optional','');
                var nmsp = $(this).find('select').attr('data-placeholder');
                var dropval = $(this).find('select').val();
                /* var filterSecman = Secman.filter(function(x){
                    return dropval.includes(x[nm]);
                });*/
                /* if(globalcount == 3){
                    d = fu;
                } */
                
                var arr = []; 
                for(i=0;i<d.length;i++){
                     if(d[i][nm] == null){
                        d[i][nm] = "Empty";
                    } 
                    if(d[i][nm] == true){
                        d[i][nm] = "true";
                    } 
                    if(d[i][nm] == false){
                        d[i][nm] = "false";
                    }
                    
                    if(arr.indexOf(d[i][nm]) == -1 && d[i][nm] != undefined){
                        
                        arr.push(d[i][nm])
                    }
                    
                }
                for(i=0;i<arr.length;i++){
                     if(arr[i][nm] == null){
                        arr[i][nm] = "Empty";
                    } 
                    if(arr[i][nm] == true){
                        arr[i][nm] = "true";
                    } 
                    if(arr[i][nm] == false){
                        arr[i][nm] = "false";
                    }
                    
                }
                arr = arr.sort();
                $(this).find('select').data("kendoMultiSelect").setDataSource(arr);
                
                //multiarList = Secman;
                for(i=0;i<d.length;i++){
                     if(d[i][nm] == "Empty"){
                        d[i][nm] = null;
                    }
                    if(d[i][nm] == "true"){
                        d[i][nm] = true;
                    } 
                    if(d[i][nm] == "false"){
                        d[i][nm] = false;
                    }
                }
                
            }
            else{
                
                //d = globalValDrop;
                //d = Secman;
                //var c = d;
                var nm = ($(this).find('select')[0].id).replace('optional','');
                var nmsp = $(this).find('select').attr('data-placeholder');
                var dropval = $(this).find('select').val();
                
                
        
                var arr = [];
                var arr2 = [];
            /*	for(i=0;i<dropval.length;i++){
                    if(dropval[i] == "Empty"){
                        dropval[i] = null;
                    } 
                }
                var filterSecman = globalValDrop.filter(function(x){
                    return multiar.includes(x[mft]);
                }); 
                for(i=0;i<dropval.length;i++){
                    if(dropval[i] == null){
                        dropval[i] = "Empty";
                    } 
                }
                if(nm == mft){
                    //c = filterSecman;
                    return true; 
                    
                }
                //d = c;
                
                c = filterSecman;
                if(c.length == 0){
                    c = fut;
                }
                if(globalcount == 3 && nm != mft){
                    c = globalValDrop;
                }
                for(i=0;i<c.length;i++){
                     if(c[i][nm] == null){
                        c[i][nm] = "Empty";
                    } 
                    if(arr.indexOf(c[i][nm]) == -1 && c[i][nm] != undefined){
                        
                        arr.push(c[i][nm])
                    }
                    
                }
                for(i=0;i<arr.length;i++){
                     if(arr[i][nm] == null){
                        arr[i][nm] = "Empty";
                    } 
                    
                } */
                if(nm == mft){
                    //c = filterSecman;
                    return true; 
                    
                }
                if(Filterseries.length == 1){//if(globalcount == 3 && nm != mft){
                    c = globalValDrop;
                }
                else {//if(globalcount == 3 && nm != mft){
                    var count = 0;
                    c = globalValDrop;
                
                        var pack = [];
                        for( var i = 0; i < Filterseries.length; i++){    
                            if ( Filterseries[i] != nm) { 							
                                pack.push(Filterseries[i]); 
                            }   
                        }
                        for(i=0;i<pack.length;i++){
                            var valar = $("#optional"+pack[i-count]).val();
                            for(j=0;j<valar.length;j++){
                                if(valar[j] == "Empty"){
                                    valar[j] = null;
                                } 
                                 if(valar[j] == "true"){
                                    valar[j] = true;
                                }
                                if(valar[j] == "false"){
                                    valar[j] = false;
                                }
                            }
                            var fil = pack[i-count];
                            var filterSecman = c.filter(function(x){
                                return valar.includes(x[fil]);
                            });
                            c = filterSecman;
                            //count ++;
                        }
                    
                }
                for(i=0;i<c.length;i++){
                     if(c[i][nm] == null){
                        c[i][nm] = "Empty";
                    } 
                    if(c[i][nm] == true){
                        c[i][nm] = "true";
                    } 
                    if(c[i][nm] == false){
                        c[i][nm] = "false";
                    }
                    
                    if(arr.indexOf(c[i][nm]) == -1 && c[i][nm] != undefined){
                        
                        arr.push(c[i][nm])
                    }
                    
                }
                for(i=0;i<arr.length;i++){
                     if(arr[i][nm] == null){
                        arr[i][nm] = "Empty";
                    } 
                    if(arr[i][nm] == true){
                        arr[i][nm] = "true";
                    } 
                    if(arr[i][nm] == false){
                        arr[i][nm] = "false";
                    } 
                    
                }
                arr = arr.sort();
                
                $(this).find('select').data("kendoMultiSelect").setDataSource(arr);
                
                //$(this).find('select').data("kendoMultiSelect").value([]);
                var dropval_new = [];
                for(j=0;j<dropval.length;j++){
                    var item = c.filter(function(x){
                        return x[nm] == dropval[j];
                    });
                    if(item.length > 0){
                        for(k=0;k<item.length;k++){
                            if(item[k][nm] == dropval[j]){
                                dropval_new.push(dropval[j]);
                            }
                        }
                    }
                }
            
                $(this).find('select').data("kendoMultiSelect").value(dropval_new); 
                
                
                var cc =$("#optional"+nm).find(":selected").length;
                $("#optional"+nm).prev().find('li').text(nmsp+ " ("+cc+")");
                
                var id = $("#optional"+nm);
                $(id).closest('div').attr('Title',id.getKendoMultiSelect().value().sort().join(', '))
               
               if($("#optional"+nm).val() != null){						
                  //  $("#optional"+nm).prev().find('input').css('margin-top','-25px');
                }
                else
                {
                    $("#optional"+nm).prev().find('input').css('margin-top','0px');
                    
                } 
              /*  for( var i = 0; i < Filterseries.length; i++){    
                    if ( Filterseries[i] === gm) { 					
                        Filterseries.splice(i, 1); 
                    }					
                } */
            }
            for(i=0;i<c.length;i++){
                     if(c[i][nm] == "Empty"){
                        c[i][nm] = null;
                    } 
                    if(c[i][nm] == "true"){
                        c[i][nm] = true;
                    }
                    if(c[i][nm] == "false"){
                        c[i][nm] = false;
                    }
                }
            
        })    
    }

    
var Para1val=$('#ddl_Location').val();
var Para2val=$('#ddl_Organization').val();
var Para3val=$('#ddl_BUOwner').val();
var Para4val=$('#ddl_GBU').val();
var Para5val=$('#ddl_HireStatus').val();

var SKIP_Para1val = 1
var SKIP_Para2val = 1
var SKIP_Para3val = 1
var SKIP_Para4val = 1
var SKIP_Para5val = 1

function cascadePara1()
{
Para1val=$('#ddl_Location').val()
Para2val=$('#ddl_Organization').val()
Para3val=$('#ddl_BUOwner').val()
Para4val=$('#ddl_GBU').val()
Para5val=$('#ddl_HireStatus').val()

var arrLocation=[];
var arrSupervisor=[];
var arrBUOwner=[];
var arrGBU=[];
var arrHireStatus=[];


                              $.each(ProjectFilterTable.Table, function(){
                                if((this.HireStatus==Para5val || Para5val==1) && (this.ResourceLocation==Para1val || Para1val==1) && (this.Supervisor==Para2val || Para2val==1) && (this.BUOwner==Para3val || Para3val==1) && (this.ResourceGBU==Para4val || Para4val==1) ){
                                if ($.inArray(this.ResourceLocation,arrLocation) === -1) {
                                    arrLocation.push(this.ResourceLocation);
                                }
                                if ($.inArray(this.Supervisor,arrSupervisor) === -1) {
                                    arrSupervisor.push(this.Supervisor);
                                }
                                if ($.inArray(this.BUOwner,arrBUOwner) === -1) {
                                    arrBUOwner.push(this.BUOwner);
                                }
                                if ($.inArray(this.ResourceGBU,arrGBU) === -1) {
                                    arrGBU.push(this.ResourceGBU);
                                }
                                if ($.inArray(this.HireStatus,arrHireStatus) === -1) {
                                    arrHireStatus.push(this.HireStatus);
                                } 
                                }
                                
                                });
                            arrLocation.sort();
                            arrSupervisor.sort();
                            arrBUOwner.sort();
                            arrGBU.sort();
                            arrHireStatus.sort();
                            
                            var HireStatusdata =""
                            var Supervisordata ="";
                            var Locationdata ="";
                            var GBUdata =""
                            var BUOwnerdata =""
                            
                            for (var i = 0; i < arrLocation.length; i++) {Locationdata=Locationdata + "<option  value='" + arrLocation[i] + "' >" + arrLocation[i] + "</option>";}
                            for (var i = 0; i < arrSupervisor.length; i++) {Supervisordata=Supervisordata + "<option  value='" + arrSupervisor[i] + "' >" + arrSupervisor[i] + "</option>";}
                            for (var i = 0; i < arrBUOwner.length; i++) {BUOwnerdata=BUOwnerdata + "<option  value='" + arrBUOwner[i] + "' >" + arrBUOwner[i] + "</option>";}
                            for (var i = 0; i < arrGBU.length; i++) {GBUdata=GBUdata + "<option  value='" + arrGBU[i] + "' >" + arrGBU[i] + "</option>";}
                            for (var i = 0; i < arrHireStatus.length; i++) {HireStatusdata=HireStatusdata + "<option  value='" + arrHireStatus[i] + "' >" + arrHireStatus[i] + "</option>";}
                            
                            HireStatusdata="<option class='clsOptiondefault' value='1'>Select Hire Status</option>" + HireStatusdata
                            Locationdata="<option class='clsOptiondefault' value='1'>Select Location</option>" + Locationdata
                            Supervisordata="<option class='clsOptiondefault' value='1'>Select Supervisor</option>" + Supervisordata
                            GBUdata="<option class='clsOptiondefault' value='1'>Select GBU</option>"+ GBUdata
                            BUOwnerdata="<option class='clsOptiondefault' value='1'>Select BU Owner</option>" + BUOwnerdata
                            
                            
                            $("#ddl_Organization").text("");
                        $("#ddl_Organization").append(Supervisordata);
                        $('#ddl_Organization').val(Para2val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Organization").trigger("chosen:updated");
                        
                        $("#ddl_GBU").text("");
                        $("#ddl_GBU").append(GBUdata);
                        $('#ddl_GBU').val(Para4val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",allow_single_deselect:true });
                        $("#ddl_GBU").trigger("chosen:updated");
                        //cc
                        if(Para1val==1)
                        {
                       $("#ddl_Location").text("");
                        $("#ddl_Location").append(Locationdata);
                        $('#ddl_Location').val(Para1val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Location").trigger("chosen:updated"); 	 
                        }

                        $("#ddl_BUOwner").text("");
                        $("#ddl_BUOwner").append(BUOwnerdata);
                        $('#ddl_BUOwner').val(Para3val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_BUOwner").trigger("chosen:updated"); 	  //
                        
                        $("#ddl_HireStatus").text("");
                        $("#ddl_HireStatus").append(HireStatusdata);
                        $('#ddl_HireStatus').val(Para5val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_HireStatus").trigger("chosen:updated"); 	  //
                                
                                                                
                

}
function cascadePara2(){


Para1val=$('#ddl_Location').val()
Para2val=$('#ddl_Organization').val()
Para3val=$('#ddl_BUOwner').val()
Para4val=$('#ddl_GBU').val()
Para5val=$('#ddl_HireStatus').val()

var arrLocation=[];
var arrSupervisor=[];
var arrBUOwner=[];
var arrGBU=[];
var arrHireStatus=[];

                              $.each(ProjectFilterTable.Table, function(){
                                //if(this.Supervisor==Para2val)
                                if((this.HireStatus==Para5val || Para5val==1) && (this.ResourceLocation==Para1val || Para1val==1) && (this.Supervisor==Para2val || Para2val==1) && (this.BUOwner==Para3val || Para3val==1) && (this.ResourceGBU==Para4val || Para4val==1) ){
                                if ($.inArray(this.ResourceLocation,arrLocation) === -1) {
                                    arrLocation.push(this.ResourceLocation);
                                }
                                if ($.inArray(this.Supervisor,arrSupervisor) === -1) {
                                    arrSupervisor.push(this.Supervisor);
                                }
                                if ($.inArray(this.BUOwner,arrBUOwner) === -1) {
                                    arrBUOwner.push(this.BUOwner);
                                }
                                if ($.inArray(this.ResourceGBU,arrGBU) === -1) {
                                    arrGBU.push(this.ResourceGBU);
                                }
                                if ($.inArray(this.HireStatus,arrHireStatus) === -1) {
                                    arrHireStatus.push(this.HireStatus);
                                } 
                                
                                }
                                
                                });
                            arrLocation.sort();
                            arrSupervisor.sort();
                            arrBUOwner.sort();
                            arrGBU.sort();
                            arrHireStatus.sort();
                            
                            var HireStatusdata =""
                            var Supervisordata ="";
                            var Locationdata ="";
                            var GBUdata =""
                            var BUOwnerdata =""
                            
                            for (var i = 0; i < arrLocation.length; i++) {Locationdata=Locationdata + "<option  value='" + arrLocation[i] + "' >" + arrLocation[i] + "</option>";}
                            for (var i = 0; i < arrSupervisor.length; i++) {Supervisordata=Supervisordata + "<option  value='" + arrSupervisor[i] + "' >" + arrSupervisor[i] + "</option>";}
                            for (var i = 0; i < arrBUOwner.length; i++) {BUOwnerdata=BUOwnerdata + "<option  value='" + arrBUOwner[i] + "' >" + arrBUOwner[i] + "</option>";}
                            for (var i = 0; i < arrGBU.length; i++) {GBUdata=GBUdata + "<option  value='" + arrGBU[i] + "' >" + arrGBU[i] + "</option>";}
                            for (var i = 0; i < arrHireStatus.length; i++) {HireStatusdata=HireStatusdata + "<option  value='" + arrHireStatus[i] + "' >" + arrHireStatus[i] + "</option>";}
                            
                            HireStatusdata="<option class='clsOptiondefault' value='1'>Select Hire Status</option>" + HireStatusdata
                            Locationdata="<option class='clsOptiondefault' value='1'>Select Location</option>" + Locationdata
                            Supervisordata="<option class='clsOptiondefault' value='1'>Select Supervisor</option>" + Supervisordata
                            GBUdata="<option class='clsOptiondefault' value='1'>Select GBU</option>"+ GBUdata
                            BUOwnerdata="<option class='clsOptiondefault' value='1'>Select BU Owner</option>" + BUOwnerdata
                            
                            //c
                            if(Para2val==1)
                            {
                                $("#ddl_Organization").text("");
                                $("#ddl_Organization").append(Supervisordata);
                                $('#ddl_Organization').val(Para2val)
                                $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                                $("#ddl_Organization").trigger("chosen:updated");
                            }
                        $("#ddl_GBU").text("");
                        $("#ddl_GBU").append(GBUdata);
                        $('#ddl_GBU').val(Para4val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",allow_single_deselect:true });
                        $("#ddl_GBU").trigger("chosen:updated");
                        
                        $("#ddl_Location").text("");
                        $("#ddl_Location").append(Locationdata);
                        $('#ddl_Location').val(Para1val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Location").trigger("chosen:updated"); 	 

                        $("#ddl_BUOwner").text("");
                        $("#ddl_BUOwner").append(BUOwnerdata);
                        $('#ddl_BUOwner').val(Para3val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_BUOwner").trigger("chosen:updated"); 	
                            
                        
                        $("#ddl_HireStatus").text("");
                        $("#ddl_HireStatus").append(HireStatusdata);
                        $('#ddl_HireStatus').val(Para5val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_HireStatus").trigger("chosen:updated"); 
                        
                        
                            
                        

}
function cascadePara3(){
    

Para1val=$('#ddl_Location').val()
Para2val=$('#ddl_Organization').val()
Para3val=$('#ddl_BUOwner').val()
Para4val=$('#ddl_GBU').val()
Para5val=$('#ddl_HireStatus').val()

var arrLocation=[];
var arrSupervisor=[];
var arrBUOwner=[];
var arrGBU=[];
var arrHireStatus=[];


                              $.each(ProjectFilterTable.Table, function(){
                                //if(this.BUOwner==Para3val)
                                if((this.HireStatus==Para5val || Para5val==1) && (this.ResourceLocation==Para1val || Para1val==1) && (this.Supervisor==Para2val || Para2val==1) && (this.BUOwner==Para3val || Para3val==1) && (this.ResourceGBU==Para4val || Para4val==1) ){
                                if ($.inArray(this.ResourceLocation,arrLocation) === -1) {
                                    arrLocation.push(this.ResourceLocation);
                                }
                                if ($.inArray(this.Supervisor,arrSupervisor) === -1) {
                                    arrSupervisor.push(this.Supervisor);
                                }
                                if ($.inArray(this.BUOwner,arrBUOwner) === -1) {
                                    arrBUOwner.push(this.BUOwner);
                                }
                                if ($.inArray(this.ResourceGBU,arrGBU) === -1) {
                                    arrGBU.push(this.ResourceGBU);
                                }
                                if ($.inArray(this.HireStatus,arrHireStatus) === -1) {
                                    arrHireStatus.push(this.HireStatus);
                                } 
                                }
                                
                                });
                            arrLocation.sort();
                            arrSupervisor.sort();
                            arrBUOwner.sort();
                            arrGBU.sort();
                            arrHireStatus.sort();
                            
                            var HireStatusdata =""
                            var Supervisordata ="";
                            var Locationdata ="";
                            var GBUdata =""
                            var BUOwnerdata =""
                            
                            for (var i = 0; i < arrLocation.length; i++) {Locationdata=Locationdata + "<option  value='" + arrLocation[i] + "' >" + arrLocation[i] + "</option>";}
                            for (var i = 0; i < arrSupervisor.length; i++) {Supervisordata=Supervisordata + "<option  value='" + arrSupervisor[i] + "' >" + arrSupervisor[i] + "</option>";}
                            for (var i = 0; i < arrBUOwner.length; i++) {BUOwnerdata=BUOwnerdata + "<option  value='" + arrBUOwner[i] + "' >" + arrBUOwner[i] + "</option>";}
                            for (var i = 0; i < arrGBU.length; i++) {GBUdata=GBUdata + "<option  value='" + arrGBU[i] + "' >" + arrGBU[i] + "</option>";}
                            for (var i = 0; i < arrHireStatus.length; i++) {HireStatusdata=HireStatusdata + "<option  value='" + arrHireStatus[i] + "' >" + arrHireStatus[i] + "</option>";}
                            
                            HireStatusdata="<option class='clsOptiondefault' value='1'>Select Hire Status</option>" + HireStatusdata
                            Locationdata="<option class='clsOptiondefault' value='1'>Select Location</option>" + Locationdata
                            Supervisordata="<option class='clsOptiondefault' value='1'>Select Supervisor</option>" + Supervisordata
                            GBUdata="<option class='clsOptiondefault' value='1'>Select GBU</option>"+ GBUdata
                            BUOwnerdata="<option class='clsOptiondefault' value='1'>Select BU Owner</option>" + BUOwnerdata
                            
                            
                        $("#ddl_Organization").text("");
                        $("#ddl_Organization").append(Supervisordata);
                        $('#ddl_Organization').val(Para2val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Organization").trigger("chosen:updated");
                        
                        $("#ddl_GBU").text("");
                        $("#ddl_GBU").append(GBUdata);
                        $('#ddl_GBU').val(Para4val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",allow_single_deselect:true });
                        $("#ddl_GBU").trigger("chosen:updated");
                        
                        $("#ddl_Location").text("");
                        $("#ddl_Location").append(Locationdata);
                        $('#ddl_Location').val(Para1val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Location").trigger("chosen:updated"); 	 

                        if(Para3val==1)
                        {
                        
                        $("#ddl_BUOwner").text("");
                        $("#ddl_BUOwner").append(BUOwnerdata);
                        $('#ddl_BUOwner').val(Para3val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_BUOwner").trigger("chosen:updated"); 	
                        }	
                        
                        
                        $("#ddl_HireStatus").text("");
                        $("#ddl_HireStatus").append(HireStatusdata);
                        $('#ddl_HireStatus').val(Para5val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_HireStatus").trigger("chosen:updated");  
        

}
function cascadePara4(){
    
Para1val=$('#ddl_Location').val()
Para2val=$('#ddl_Organization').val()
Para3val=$('#ddl_BUOwner').val()
Para4val=$('#ddl_GBU').val()
Para5val=$('#ddl_HireStatus').val()

var arrLocation=[];
var arrSupervisor=[];
var arrBUOwner=[];
var arrGBU=[];
var arrHireStatus=[];


                              $.each(ProjectFilterTable.Table, function(){
                                //if(this.ResourceGBU==Para4val)
                                if((this.HireStatus==Para5val || Para5val==1) && (this.ResourceLocation==Para1val || Para1val==1) && (this.Supervisor==Para2val || Para2val==1) && (this.BUOwner==Para3val || Para3val==1) && (this.ResourceGBU==Para4val || Para4val==1) ){
                                if ($.inArray(this.ResourceLocation,arrLocation) === -1) {
                                    arrLocation.push(this.ResourceLocation);
                                }
                                if ($.inArray(this.Supervisor,arrSupervisor) === -1) {
                                    arrSupervisor.push(this.Supervisor);
                                }
                                if ($.inArray(this.BUOwner,arrBUOwner) === -1) {
                                    arrBUOwner.push(this.BUOwner);
                                }
                                if ($.inArray(this.ResourceGBU,arrGBU) === -1) {
                                    arrGBU.push(this.ResourceGBU);
                                }
                                if ($.inArray(this.HireStatus,arrHireStatus) === -1) {
                                    arrHireStatus.push(this.HireStatus);
                                } 
                                
                                }
                                
                                });
                            arrLocation.sort();
                            arrSupervisor.sort();
                            arrBUOwner.sort();
                            arrGBU.sort();
                            arrHireStatus.sort();
                            
                            var HireStatusdata =""
                            var Supervisordata ="";
                            var Locationdata ="";
                            var GBUdata =""
                            var BUOwnerdata =""
                            
                            for (var i = 0; i < arrLocation.length; i++) {Locationdata=Locationdata + "<option  value='" + arrLocation[i] + "' >" + arrLocation[i] + "</option>";}
                            for (var i = 0; i < arrSupervisor.length; i++) {Supervisordata=Supervisordata + "<option  value='" + arrSupervisor[i] + "' >" + arrSupervisor[i] + "</option>";}
                            for (var i = 0; i < arrBUOwner.length; i++) {BUOwnerdata=BUOwnerdata + "<option  value='" + arrBUOwner[i] + "' >" + arrBUOwner[i] + "</option>";}
                            for (var i = 0; i < arrGBU.length; i++) {GBUdata=GBUdata + "<option  value='" + arrGBU[i] + "' >" + arrGBU[i] + "</option>";}
                            for (var i = 0; i < arrHireStatus.length; i++) {HireStatusdata=HireStatusdata + "<option  value='" + arrHireStatus[i] + "' >" + arrHireStatus[i] + "</option>";}
                            
                            HireStatusdata="<option class='clsOptiondefault' value='1'>Select Hire Status</option>" + HireStatusdata								
                            Locationdata="<option class='clsOptiondefault' value='1'>Select Location</option>" + Locationdata
                            Supervisordata="<option class='clsOptiondefault' value='1'>Select Supervisor</option>" + Supervisordata
                            GBUdata="<option class='clsOptiondefault' value='1'>Select GBU</option>"+ GBUdata
                            BUOwnerdata="<option class='clsOptiondefault' value='1'>Select BU Owner</option>" + BUOwnerdata
                            
                            
                        $("#ddl_Organization").text("");
                        $("#ddl_Organization").append(Supervisordata);
                        $('#ddl_Organization').val(Para2val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Organization").trigger("chosen:updated");
                        
                        if(Para4val==1)
                        {
                            $("#ddl_GBU").text("");
                            $("#ddl_GBU").append(GBUdata);
                            $('#ddl_GBU').val(Para4val)
                            $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",allow_single_deselect:true });
                            $("#ddl_GBU").trigger("chosen:updated");
                        }
                        
                        $("#ddl_Location").text("");
                        $("#ddl_Location").append(Locationdata);
                        $('#ddl_Location').val(Para1val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Location").trigger("chosen:updated"); 	 

                        $("#ddl_BUOwner").text("");
                        $("#ddl_BUOwner").append(BUOwnerdata);
                        $('#ddl_BUOwner').val(Para3val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_BUOwner").trigger("chosen:updated"); 	
                        

                        $("#ddl_HireStatus").text("");
                        $("#ddl_HireStatus").append(HireStatusdata);
                        $('#ddl_HireStatus').val(Para5val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_HireStatus").trigger("chosen:updated"); 							
                        
        

}


function cascadePara5(){
    
Para1val=$('#ddl_Location').val()
Para2val=$('#ddl_Organization').val()
Para3val=$('#ddl_BUOwner').val()
Para4val=$('#ddl_GBU').val()
Para5val=$('#ddl_HireStatus').val()

var arrLocation=[];
var arrSupervisor=[];
var arrBUOwner=[];
var arrGBU=[];
var arrHireStatus=[];


                              $.each(ProjectFilterTable.Table, function(){
                                //if(this.ResourceGBU==Para4val)
                                if((this.HireStatus==Para5val || Para5val==1) && (this.ResourceLocation==Para1val || Para1val==1) && (this.Supervisor==Para2val || Para2val==1) && (this.BUOwner==Para3val || Para3val==1) && (this.ResourceGBU==Para4val || Para4val==1) ){
                                if ($.inArray(this.ResourceLocation,arrLocation) === -1) {
                                    arrLocation.push(this.ResourceLocation);
                                }
                                if ($.inArray(this.Supervisor,arrSupervisor) === -1) {
                                    arrSupervisor.push(this.Supervisor);
                                }
                                if ($.inArray(this.BUOwner,arrBUOwner) === -1) {
                                    arrBUOwner.push(this.BUOwner);
                                }
                                if ($.inArray(this.ResourceGBU,arrGBU) === -1) {
                                    arrGBU.push(this.ResourceGBU);
                                }
                                if ($.inArray(this.HireStatus,arrHireStatus) === -1) {
                                    arrHireStatus.push(this.HireStatus);
                                } 
                                
                                }
                                
                                });
                            arrLocation.sort();
                            arrSupervisor.sort();
                            arrBUOwner.sort();
                            arrGBU.sort();
                            arrHireStatus.sort();
                            
                            var HireStatusdata =""
                            var Supervisordata ="";
                            var Locationdata ="";
                            var GBUdata =""
                            var BUOwnerdata =""
                            
                            for (var i = 0; i < arrLocation.length; i++) {Locationdata=Locationdata + "<option  value='" + arrLocation[i] + "' >" + arrLocation[i] + "</option>";}
                            for (var i = 0; i < arrSupervisor.length; i++) {Supervisordata=Supervisordata + "<option  value='" + arrSupervisor[i] + "' >" + arrSupervisor[i] + "</option>";}
                            for (var i = 0; i < arrBUOwner.length; i++) {BUOwnerdata=BUOwnerdata + "<option  value='" + arrBUOwner[i] + "' >" + arrBUOwner[i] + "</option>";}
                            for (var i = 0; i < arrGBU.length; i++) {GBUdata=GBUdata + "<option  value='" + arrGBU[i] + "' >" + arrGBU[i] + "</option>";}
                            for (var i = 0; i < arrHireStatus.length; i++) {HireStatusdata=HireStatusdata + "<option  value='" + arrHireStatus[i] + "' >" + arrHireStatus[i] + "</option>";}
                            
                            HireStatusdata="<option class='clsOptiondefault' value='1'>Select Hire Status</option>" + HireStatusdata								
                            Locationdata="<option class='clsOptiondefault' value='1'>Select Location</option>" + Locationdata
                            Supervisordata="<option class='clsOptiondefault' value='1'>Select Supervisor</option>" + Supervisordata
                            GBUdata="<option class='clsOptiondefault' value='1'>Select GBU</option>"+ GBUdata
                            BUOwnerdata="<option class='clsOptiondefault' value='1'>Select BU Owner</option>" + BUOwnerdata
                            
                            
                        $("#ddl_Organization").text("");
                        $("#ddl_Organization").append(Supervisordata);
                        $('#ddl_Organization').val(Para2val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Organization").trigger("chosen:updated");
                    
                        
                        $("#ddl_GBU").text("");
                        $("#ddl_GBU").append(GBUdata);
                        $('#ddl_GBU').val(Para4val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "80px",allow_single_deselect:true });
                        $("#ddl_GBU").trigger("chosen:updated");
                        
                        
                        $("#ddl_Location").text("");
                        $("#ddl_Location").append(Locationdata);
                        $('#ddl_Location').val(Para1val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_Location").trigger("chosen:updated"); 	 

                        $("#ddl_BUOwner").text("");
                        $("#ddl_BUOwner").append(BUOwnerdata);
                        $('#ddl_BUOwner').val(Para3val)
                        $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                        $("#ddl_BUOwner").trigger("chosen:updated"); 	
                        
                        if(Para5val==1)
                        {
                            $("#ddl_HireStatus").text("");
                            $("#ddl_HireStatus").append(HireStatusdata);
                            $('#ddl_HireStatus').val(Para5val)
                            $(".ddlFilters").chosen({no_results_text: "Oops, nothing found!",width: "200px",allow_single_deselect:true });
                            $("#ddl_HireStatus").trigger("chosen:updated"); 				
                        }							
                        
        

}

function monthDiff(d1, d2) {
var months;
months = (d2.getFullYear() - d1.getFullYear()) * 12;
months -= d1.getMonth();
months += d2.getMonth();
return months <= 0 ? 0 : months;
}
//$(document).ready(function () {
var newstart
var newend

function getGridDataClickWithFilters()
{
    ck = 0;

         GridGantt=[];
 GridGanttIndex=0;
 GridTPhase=[];
 GridTPhaseIndex=0;
 GridGrid=[];
 GridGridIndex=0;
 Gridtable="";
 OutputResponseTable="";
 OutputResponseTable1="";
 OutputResponseTable_Group="";
 arr_GroupName=[]
 arr_GroupName_Count=[]
 
 ChangedProject = "";
ChangedProjectStart= "";
ChangedProjectStartNew= "";
ChangedProjectEnd= "";
ChangedProjectEndNew= "";
 
// var radBtn = $("input[name='GroupingData']:checked").val() 
        var DropCheck  = $('#drp_resources').val()
        //console.log(GanttData);
        $('#message').text('')
        var Sdate = $("#start").val()
        var EDate = $("#end").val()
        //if(Sdate == null || Sdate == '' || EDate == null || EDate == '' || DropCheck == null || radBtn == undefined){
            if(Sdate == null || Sdate == '' || EDate == null || EDate == '' || DropCheck == null ){
            $('#message').text('Please populate all required fields indicated with an *');
            $('#gantt').html(""); $('#ganttGrid').html("");$("#gantt").hide();
            
            return;				
        }
        else{
            $("#gantt").show();//$("#gantt").css("height","max-content !important");
            
            setTimeout(function(){
            var a = $($("#gantt").find('div').next()[0]).height();
            $($("#gantt").find('div').next()[1]).css('height',a+'px !important');
            },10);
        }

        deletEngagenetarray.push('0D8659FD-C069-EA11-B089-00155DA49E01')
        deletEngagenetarray.push('1A0FDDC5-151D-EA11-9D21-001C42D6E023')
        deletEngagenetarray.push('2B82A118-31D6-E911-B080-00155DC46F22')
        var singleObj = {};	
        var listOfObjects=[];
        
        /* var b = $('#drp_resources').val();
        var rvsls=[];
        for(var i = 0;i< b.length; i++)
        {
            var rvlue=ddnid[ddntext.indexOf(b[i])];
            rvsls.push(rvlue)
        
        }
        
        
        singleObj.FilterText = "Resourceuid";
        singleObj.FilterValue = rvsls.join('|'); */
        
        var rvsls=[];
        var b = $('#drp_resources').val();
        
        if(b.length > 1 && b.indexOf("Select All") != -1)
        {
            let value = "Select All";
            b = b.filter(item => item !== value)
        }
        
        if(b == "Select All")
        {
                singleObj.FilterText = "Resourceuid";
                singleObj.FilterValue = ddnid.join('|');
            
        }
        else
        {
            for(var i = 0;i< b.length; i++)
            {
                var rvlue=ddnid[ddntext.indexOf(b[i])];
                rvsls.push(rvlue);
                singleObj.FilterText = "Resourceuid";
                singleObj.FilterValue = rvsls.join('|');
            }	
        }
        
        
        listOfObjects.push(singleObj); 
        
        var Filter1= {};	
        Filter1.FilterText = "Filter1";
        if($($("#dynmaicddn").find('td')[0]).find('select').val()==null || $($("#dynmaicddn").find('td')[0]).find('select').val()=='')
        {
            Filter1.FilterValue = "1"
        }
        else
        {
            //Filter1.FilterValue = $('#optionalLocation').val().join('|').toString();
            Filter1.FilterValue = $($("#dynmaicddn").find('td')[0]).find('select').val().join("|")
        }
        
        listOfObjects.push(Filter1); 
        
        var Filter2= {};	
        Filter2.FilterText = "Filter2";
        if($($("#dynmaicddn").find('td')[1]).find('select').val()==null || $($("#dynmaicddn").find('td')[1]).find('select').val()=='')
        {
            Filter2.FilterValue = "1"
        }
        else
        {
            Filter2.FilterValue = $($("#dynmaicddn").find('td')[1]).find('select').val().join("|")
        }
        
        listOfObjects.push(Filter2); 
        
        var Filter3= {};	
        Filter3.FilterText = "Filter3";
        if($($("#dynmaicddn").find('td')[2]).find('select').val()==null || $($("#dynmaicddn").find('td')[2]).find('select').val()=='')
        {
            Filter3.FilterValue = "1"
        }
        else
        {
            Filter3.FilterValue = $($("#dynmaicddn").find('td')[2]).find('select').val().join("|")
        } 
        
        
        
        listOfObjects.push(Filter3); 
        
        var Filter4= {};	
        Filter4.FilterText = "Filter4";
        if($($("#dynmaicddn").find('td')[3]).find('select').val()==null || $($("#dynmaicddn").find('td')[3]).find('select').val()=='')
        {
            Filter4.FilterValue = "1"
        }
        else
        {
            Filter4.FilterValue = $($("#dynmaicddn").find('td')[3]).find('select').val().join("|")
        }
        
        listOfObjects.push(Filter4); 
        
        var Filter5= {};	
        Filter5.FilterText = "Filter5";
        if($('#ddl_HireStatus').val()=="undefined" || $('#ddl_HireStatus').val()==undefined || $('#ddl_HireStatus').val()==null || $('#ddl_HireStatus').val()=='')
        {
            Filter5.FilterValue = "1"
        }
        else
        {
            Filter5.FilterValue = $('#ddl_HireStatus').val().toString();
        }
        
        listOfObjects.push(Filter5); 
        
        
        
        var allData ="'"+ JSON.stringify(listOfObjects)+"'";
        
        
        /* var b1 = $('#drp_resources').val();
        var rvsls1=[];
        for(var i = 0;i< b1.length; i++)
        {
            var rvlue1=ddnid[ddntext.indexOf(b1[i])];
            rvsls1.push(rvlue1)
        
        }
         */
         
         var b1 = $('#drp_resources').val();
         
         if(b1.length > 1 && b1.indexOf("Select All") != -1)
        {
            let value1 = "Select All";
            b1 = b1.filter(item => item !== value1)
        }
        
        
        var rvsls1=[];
        if(b1 == "Select All")
        {
                rvsls1 = ddnid;
            
        }
        else
        {
            for(var i = 0;i< b1.length; i++)
            {
                var rvlue1=ddnid[ddntext.indexOf(b1[i])];
                rvsls1.push(rvlue1)
            }	
        }
        
        
        
        var selectedvals=rvsls1;//$('#drp_resources').val();
        //console.log(GanttData);
        for(j=0;j<selectedvals.length;j++)
        {
            //var idxs=arr_ProjectNo.indexOf(parseInt(selectedvals[j]));
            var idxs=arr_ProjectNo.indexOf((selectedvals[j]));
            if(j==0)
            {
             newstart=arr_ProjectStart[idxs]
             newend=arr_ProjectFinish[idxs]
            }
            else
            {
                if(new Date(newstart)>new Date(arr_ProjectStart[idxs])){newstart=arr_ProjectStart[idxs]}
                if(new Date(newend)<new Date(arr_ProjectFinish[idxs])){newend=arr_ProjectFinish[idxs]}
                
            }
             

        }
                            
                        
            newstart=new Date(new Date(newstart).setMonth(new Date(newstart).getMonth() -3))
            newend=new Date(new Date(newend).setMonth(new Date(newend).getMonth() +24))
        
/* 			var YearS= $("#start").val().split(' ')[1];
          var MonthS= monthNamesFull.indexOf($("#start").val().split(' ')[0]); 

        var YearF= $("#end").val().split(' ')[1];
        var MonthF= monthNamesFull.indexOf($("#end").val().split(' ')[0]); 
        
        var YearS= newstart.split('-')[0];
          var MonthS= newstart.split('-')[1];
        
        var YearF= newend.split('-')[0];
        var MonthF= newend.split('-')[1];  */
        
        var YearS= newstart.getFullYear();
          var MonthS= newstart.getMonth();
        
        var YearF= newend.getFullYear();
        var MonthF= newend.getMonth();
        
        
        var val1 =new Date(YearS,MonthS,5);
        val1.setMonth(new Date(val1).getMonth()-1)
        
        var val2 =new Date(YearF,MonthF,5);
        
         /* if(monthDiff(new Date(newstart),new Date(newend)) != 24)
        {
            var Tempdate=new Date(val1)
            val2=new Date(Tempdate.setFullYear(Tempdate.getFullYear() + 2))
        } 
         */
        var startDate = val1.getMonth() +1+ ' ' + val1.getFullYear();
        var EndDate = val2.getMonth() + 1 + ' ' + val2.getFullYear();
        /*var paraT="";
        for(i=0;i<IdeasArr.length;i++){
          paraT +=IdeasArr[i]['condition']+' OR '  
        }
        var lastIndex = paraT.lastIndexOf(" OR");
        paraT = paraT.substring(0, lastIndex);
        listOfObjects.push({"FilterText":"ProjectFilter","FilterValue":paraT.split("'").join("")});
        var allData ="'"+ JSON.stringify(listOfObjects)+"'";
        //paraArr1="'"+JSON.stringify(ideaArr1)+"'";
        var RoleUrl=azurewebsites+'/Api/GanttUpdated_Role_Filters_Dynamic/9FA7C3AC-3564-4836-9A50-8951792AF1B4/'+startDate+'/'+EndDate;*/
        var RoleUrl=azurewebsites+'/Api/GanttUpdated_Role_Filters/9FA7C3AC-3564-4836-9A50-8951792AF1B4/'+startDate+'/'+EndDate;
        var ResourceUrl=azurewebsites+'/Api/GanttUpdated_Project/9FA7C3AC-3564-4836-9A50-8951792AF1B4/'+startDate+'/'+EndDate;
        var ProjectOnlyUrl=azurewebsites+'/Api/GanttUpdated_ProjectOnly/9FA7C3AC-3564-4836-9A50-8951792AF1B4/'+startDate+'/'+EndDate;
        var callURL=ResourceUrl;
        callURL=RoleUrl;
        /* if($("input[name='GroupingData']:checked").val()=="ResourceType")
        {
            callURL=RoleUrl;				
        } */
        
        $.LoadingOverlay("show");
        $.ajax({        	       
                          url: callURL,
                          type: "PUT",
                          data: allData,//JSON.stringify(allData),
                          contentType: "application/json; charset=utf-8",
                          dataType: "json",
                          success: function (data) {
                         	
                           $('#gantt').html("");
                           $('#ganttGrid').html("");
                           
                            OutputResponseTable
                            OutputResponseTable1
                           
                           var ResponseTable= JSON.parse(data)
                            Table1Data = ResponseTable.Table1.map(item => ({ ...item })); // Create a deep copy of the array
                             TableData = ResponseTable.Table.map(item => ({ ...item })); // Create a deep copy of the array
                           for (let i = 0; i < ResponseTable.Table1.length; i++) {
  delete ResponseTable.Table1[i].Prefix1;
}
 for (let i = 0; i < ResponseTable.Table.length; i++) {
  delete ResponseTable.Table[i].Prefix1;
}

                           // var ResponseTable= (data)
                          //var GanttData = data
                        Resources_array = [];
                            Resources_array = 	JSON.parse(data).Table1.filter(function(x){
                                                    return x.Projectname ==  x.resourceName
                                                })
                            var Resources_array_namelen = Resources_array.length;
                            for(po=0;po<Resources_array_namelen;po++){
                                if(Resources_array_name.indexOf(Resources_array[po].resourceName) == -1){
                                    Resources_array_name.push(Resources_array[po].resourceName);
                                }
                                
                            }
                            
                            var selProjName2 = [];
                            var TTitle = [];								
                            OutputResponseTable =ResponseTable.Table
                            //OutputResponseTable.sort(compare_to_sort)
                            //OutputResponseTable.sort((a, b) => a.Title.toLowerCase().localeCompare(b.Title.toLowerCase()))
                            OutputResponseTable.forEach(function(item1){ 
                                    TTitle.push(item1.Title);
                            })
                            var dsc = ResponseTable.Table1;
                            
                            if(chktrue){
                                dsc.forEach(function(item2,idx){ 
                                        if(item2.Projectuid == -1){
                                             selProjName2.push(item2) 
                                        }
                                        else if(TTitle.indexOf(item2.Projectname) != -1)
                                          {
                                               selProjName2.push(item2) 
                                          }
                                 })
                                 OutputResponseTable1=selProjName2
                            }else{								
                                OutputResponseTable1=ResponseTable.Table1;
                            }
                          
                          chktrue = false
                          
                          OutputResponseTable_Group=ResponseTable.Table2
                          //working
                          var keys = Object.keys(OutputResponseTable1[0]);
                         var Start1= new Date(keys[keys.length-1]);
                         GanttFinish = new Date(Start1.setMonth(Start1.getMonth()+1));
                         GanttStart= new Date(keys[3]);
                         
                         //var Sel_Start=$('#start').val().split(' ')
                         var Sel_Start=$('#start').val().split(' ')
                         var sel_Start_Mon=monthNamesFull.indexOf(Sel_Start[0])
                         //GanttStart = new Date(Sel_Start[1],sel_Start_Mon,5)
                         //NewGanttStart = new Date(Sel_Start[1],sel_Start_Mon,15)
                          GanttStart = new Date(YearS,MonthS,5)
                          GanttStart.setMonth(new Date(GanttStart).getMonth()-1)
                         NewGanttStart = new Date(YearS,MonthS,15)
                         NewGanttStart.setMonth(new Date(NewGanttStart).getMonth()-1)
                         
                         //var Sel_end=$('#end').val().split(' ')
                         var Sel_end=$('#end').val().split(' ')
                         var sel_end_Mon=monthNamesFull.indexOf(Sel_end[0])
                         //GanttFinish = new Date(Sel_end[1],sel_end_Mon,5);
                         //NewGanttFinish = new Date(Sel_end[1],sel_end_Mon,55)
                         GanttFinish = new Date(YearF,MonthF,5);
                         NewGanttFinish = new Date(YearF,MonthF,55)
                         
                        /*  if(monthDiff(new Date(newstart),new Date(newend)) != 24)
                            {
                                var Tempdate=new Date(YearS,MonthS,5)
                                GanttFinish=new Date(Tempdate.setFullYear(Tempdate.getFullYear() + 2))
                                
                                Tempdate=new Date(YearS,MonthS,15)
                                NewGanttFinish=new Date(Tempdate.setFullYear(Tempdate.getFullYear() + 2))
                            } 
                          */
                         
                         //GanttFinish=new Date(GanttStart.setFullYear(GanttStart.getFullYear() + 2))
                         //NewGanttFinish=new Date(NewGanttStart.setFullYear(NewGanttStart.getFullYear() + 2))
                         
                          var Ldata =[];
                          var Ddata =[];

                          // Create a map for faster lookup based on Projectuid
const tableDataMap = new Map();
TableData.forEach(item => {
  tableDataMap.set(item.Projectuid, item.Prefix1);
});

// Update ResponseTable.Table objects with Prefix1 from TableData
ResponseTable.Table.forEach(item => {
  const prefix1 = tableDataMap.get(item.Projectuid);
  if (prefix1 !== undefined) {
    item.Prefix1 = prefix1;
  }
});
                          
                         var TempGanntData = ResponseTable.Table;
                         
                         var GanttData;
GanttData = [];

for (let i = 0; i < TempGanntData.length; i++) {
  const object = TempGanntData[i];
  const Projectname = object.Title;

  if (Projectname) {
    const words = Projectname.split(' ');

    // Check if the first word is a scientific notation value
    if (/^\d+(\.\d+)?e\+\d+$/.test(words[0])) {
       
      // Convert the scientific notation value to a normal number
      const numberValue = parseFloat(words[0]);

      // Format the number with commas using toLocaleString
      const formattedNumberValue = numberValue.toLocaleString();

      // Replace the first word with the formatted value
      words[0] = formattedNumberValue;

      // Join the words back into a single string
      const modifiedProjectname = words.join(' ');

      // Create a new object with the modified projectname and other properties
      const newObject = {
        ...object,
        Title: modifiedProjectname,
      };

      // Add the new object to the new array
      GanttData.push(newObject);
    } else {
      // Check if the first word is a numeric value
      const numericValue = parseFloat(words[0].replace(/,/g, ''));

      // Check if the first word is a date-like value
      const isDateLike = /^\d{4}-\d{2}-\d{2}$/.test(words[0]);

      if (!isNaN(numericValue) && !isDateLike) {
        // Format the numeric value with commas using toLocaleString
        const formattedNumericValue = numericValue.toLocaleString();

        // Replace the first word with the formatted value
        words[0] = formattedNumericValue;
      }

      const modifiedTitle = words.join(' ');

      const newObject = {
        ...object,
        Title: modifiedTitle,
      };

      GanttData.push(newObject);
    }
  } else {
    GanttData.push(object);
  }
}

GanttData.sort(function (a, b) {
  const aPotential1 = a.Prefix1;
  const bPotential1 = b.Prefix1;

  // Check if Potential1 is empty or null for both objects
  if ((aPotential1 === null || aPotential1 === "") && (bPotential1 === null || bPotential1 === "")) {
    return a.Title.localeCompare(b.Title);
  }

  const aPrefixType = getPrefixType(aPotential1);
  const bPrefixType = getPrefixType(bPotential1);

  if (aPotential1 !== null && aPotential1 !== "" && bPotential1 !== null && bPotential1 !== "") {
         if (aPrefixType === 'number' && bPrefixType === 'number') {
      const aNumber = parseFloat(aPotential1);
      const bNumber = parseFloat(bPotential1);
      return aNumber - bNumber;
    }else if(aPrefixType === 'date' && bPrefixType === 'date'){
      const aDate = new Date(a.Prefix1);
      const bDate = new Date(b.Prefix1);
      return aDate - bDate;
    }
  } else if (aPotential1 === "" || aPotential1 === null) {
    // Sort empty Potential1 objects after special types and number/date prefixes
    if (bPrefixType === 'number' || bPrefixType === 'date') {
      return 1;
    }
    if (bPrefixType === 'text') return 1; // Text type first
    if (bPrefixType === 'boolean') return 1; // Boolean type first
  } else if (bPotential1 === "" || bPotential1 === null) {
    // Sort empty Potential1 objects after special types and number/date prefixes
    if (aPrefixType === 'number' || aPrefixType === 'date') {
      return -1;
    }
    if (aPrefixType === 'text') return -1; // Text type first
    if (aPrefixType === 'boolean') return -1; // Boolean type first
  }

  // If Potential1 is empty or null, sort alphabetically
  return a.Title.localeCompare(b.Title);
});

for (let i = 0; i < ResponseTable.Table.length; i++) {
  delete ResponseTable.Table[i].Prefix1;
}
for (let i = 0; i < GanttData.length; i++) {
  delete GanttData[i].Prefix1;
}


                          
                          for (var i = 0; i < GanttData.length; i++) 
                          {
                              GanttData[i].ID =  parseInt(GanttData[i].ID)
                            GanttData[i].orderId =  parseInt(GanttData[i].orderId)
                            
                              
                            if(GanttData[i].ParentID==null)
                            {
                                //if(GanttData[i].Title.startsWith('_'))
                                {
                                    GanttData[i].percentComplete=0.0
                                    GridGantt[GridGanttIndex]=GanttData[i]
                                GridGanttIndex++;
                                }
                                
                            }
                            else									
                            {
                                GanttData[i].ParentID = parseInt(GanttData[i].ParentID)
                                var Lobj = {}
                                Lobj.ID= GanttData[i].ID;
                                Lobj.ResourceID= null
                                Lobj.TaskID= GanttData[i].ID
                                Lobj.Units = GanttData[i].TotalUnit
                                Ldata.push(Lobj);
                                
                                var sinobj = {}
                                sinobj.ID= GanttData[i].ID;
                                sinobj.PredecessorID= GanttData[i].ParentID
                                sinobj.SuccessorID= GanttData[i].ID
                                sinobj.Type = 0
                                Ddata.push(sinobj); 
                                
                                GridTPhase[GridTPhaseIndex]==GanttData[i]
                                GridTPhaseIndex++;
                            }
                                                            
                            
                          }
                        
                            for(j=0;j<OutputResponseTable_Group.length;j++)
                            {
                                arr_GroupName.push(OutputResponseTable_Group[j].PrimaryJobRole)
                                arr_GroupName_Count.push(OutputResponseTable_Group[j].ResourceCount)
                            }									
                            

                          
                          $.LoadingOverlay("hide");
                          
                            

                          GenerateGridGrid(ResponseTable.Table1)
                          GenerateGanttChart(GridGantt,Ldata,Ddata)
                          // cleanandupdateGridCells()
                          },
                          error: function (err) {
                              $.LoadingOverlay("hide");
                            alert(err);
                          }
                      });         	
                      
};

function setFilterReset()
{
filterDropdown();
Filterseries = [];

stk_Filter_1=[];
stk_Filter_2=[];
stk_Filter_3=[];
stk_Filter_4=[];
stk_Filter_5=[];

                        $($('td[name="td_filter"]')[0]).each(function(x){
                            
                                var nm = ($(this).find('select')[0].id); 
                                var ddl = $("#"+nm).data("kendoMultiSelect"); ddl.dataSource.data([]); 
                                ddl.value("");
                                
                        })
                        
                        $($('td[name="td_filter"]')[1]).each(function(x){
                                var nm1 = ($(this).find('select')[0].id); 
                                var ddl1 = $("#"+nm1).data("kendoMultiSelect"); ddl1.dataSource.data([]); 
                                ddl1.value(""); 
                            
                                
                        })
                        
                        $($('td[name="td_filter"]')[2]).each(function(x){
                                var nm2 = ($(this).find('select')[0].id); 
                                var ddl2 = $("#"+nm2).data("kendoMultiSelect"); ddl2.dataSource.data([]); 
                                ddl2.value(""); 
                                                            
                        })
                        
                        $($('td[name="td_filter"]')[3]).each(function(x){
                                var nm3 = ($(this).find('select')[0].id); 
                                var ddl3 = $("#"+nm3).data("kendoMultiSelect"); ddl3.dataSource.data([]); 
                                ddl3.value(""); 
                                                            
                        })
                        
                        /*$('td[name="td_filter"]').each(function(x){
                                var nm3 = ($(this).find('select')[3].id); 
                                var ddl3 = $("#"+nm3).data("kendoMultiSelect"); ddl3.dataSource.data([]); 
                                ddl3.value(""); ddl3.text(""); 
                                                            
                        }) */
                        
}

//});

function cleanandupdateGridCellsV2()
    {
            var RData=OutputResponseTable1
            var newStart= new Date(ChangedProjectStartNew)
            var oldStart= new Date(ChangedProjectStart)
            var newEnd= new Date(ChangedProjectEndNew)
            var oldEnd= new Date(ChangedProjectEnd)
            
            //-------
            var monthval=newStart.getMonth()+1
            var strNewStart= newStart.getFullYear()+'-'+ (monthval.toString().length==2?monthval.toString():'0'+monthval.toString())+'-05'
             monthval=oldStart.getMonth()+1
            var stroldStart= oldStart.getFullYear()+'-'+ (monthval.toString().length==2?monthval.toString():'0'+monthval.toString())+'-05'
            
             monthval=newEnd.getMonth()+1
            var strnewEnd= newEnd.getFullYear()+'-'+ (monthval.toString().length==2?monthval.toString():'0'+monthval.toString()) +'-05'
             monthval=oldEnd.getMonth()+1
            var stroldEnd= oldEnd.getFullYear()+'-'+ (monthval.toString().length==2?monthval.toString():'0'+monthval.toString())+'-05'
            
            //------
            
            var keys = Object.keys(RData[0]);
            //-------
            var newStartIndex=keys.indexOf(strNewStart);
            var stroldStartIndex=keys.indexOf(stroldStart);
            var strnewEndIndex=keys.indexOf(strnewEnd);
            var stroldEndIndex=keys.indexOf(stroldEnd);
            
            //-------
            
            
            
            var Direction="Left";
            var diff=monthDiff(newStart,oldStart)
            if(newStart>oldStart)
            {
                Direction="Right"					
            }
            
            
            
            for(i=0;i<OutputResponseTable1.length;i++)
            {
                
                if(OutputResponseTable1[i].Projectname==ChangedProject)
                {
                    var tempidvalx=0
                    var temp=[];
                    for(j=stroldStartIndex;j<stroldEndIndex;j++)
                    {													
                        OutputResponseTable1[i]
                        temp.push(OutputResponseTable1[i][keys[j]])
                    }
                    
                    for(j=4;j<keys.length;j++)
                    {			
                        OutputResponseTable1[i][keys[j]]=0;
                    }
                    var temploop=0;
                    for(j=newStartIndex;j<strnewEndIndex;j++)
                    {													
                        OutputResponseTable1[i]
                        OutputResponseTable1[i][keys[j]]=temp[temploop];
                        temploop++;
                    }
                    
                    
                }
            }
        //GenerateGridGrid(OutputResponseTable1);
        //currentselectedproj = OutputResponseTable1;
        cleanandupdateGridCellsV3(OutputResponseTable1);
        
    }

function monthDiff(dateFrom, dateTo) {
return dateTo.getMonth() - dateFrom.getMonth() + 
(12 * (dateTo.getFullYear() - dateFrom.getFullYear()))
}

var Clean2GridData=[]
//var currentselectedproj = '';;
function cleanandupdateGridCellsV3(updatesum)
{
    Clean2GridData=[]
    var RData = updatesum;

    var keys = Object.keys(RData[0]);
    var Single_Resource=[];
    for(i=0;i<RData.length;i++)
    {	Single_Resource.push(RData[i]["Projectname"])
        if(RData[i]["resourceName"]!=RData[i]["Projectname"])
        {
            if(RData[i]["Projectname"]=="Biothermal Ear Warming System")
            {
             console.log("DD");
            }
            var idx=Single_Resource.indexOf(RData[i]["resourceName"])
            for(j=4;j<keys.length; j++)
                {	

                try{
                var cval1 =RData[idx][keys[j]];
                var cval2=RData[i][keys[j]]
                cval1=(cval1==null?0:parseFloat(cval1))
                cval2=(cval2==null?0:parseFloat(cval2))
            
                RData[idx][keys[j]]=parseFloat(cval1) + parseFloat(cval2)	
                }
                catch(err){ console.log(err)}

                                    
             
                }
        }
        else
        {
            for(j=4;j<keys.length; j++)
                {	
                RData[i][keys[j]]=0					
             
                }
            
        }
    }
    GenerateGridGrid(RData);
}




function cleanandupdateGridCells()
{
    Clean2GridData=[]
    var RData=OutputResponseTable1
    var keys = Object.keys(RData[0]);
    var Single_Resource=[];
    for(i=0;i<RData.length;i++)
    {   if(Single_Resource.indexOf(RData[i]["resourceName"])== -1)
        {Single_Resource.push(RData[i]["resourceName"])
          var Temp=[]; 
          for(j=0;j<keys.length; j++)
            {
                Temp[j]=RData[i][keys[j]]
             
            }
         Clean2GridData.push(Temp);
        }
        else
        {
            var idx=Single_Resource.indexOf(RData[i]["resourceName"])
             for(j=3;j<keys.length; j++)
                {			 

            var cval1 =Clean2GridData[idx][j];
            var cval2=RData[i][keys[j]]
            cval1=(cval1==null?0:parseFloat(cval1))
            cval2=(cval2==null?0:parseFloat(cval2))
            
                Clean2GridData[idx][j]=parseFloat(cval1) + parseFloat(cval2)						
             
            }
        }
        
    }
GenerateGridGrid(Clean2GridData,keys);
}
var Resources_array = [];
var Resources_array_name = [];
var global_JxlData = [];
var gridPcheck = false
function GenerateGridGrid(JData)	
{

      for (let i = 0; i < JData.length; i++) {
  delete JData[i].Prefix1;
}
    
if(!sortingApply || moved){
    global_JxlData = JData;
    global_JxlData_len = global_JxlData.length;
    for(hx=0;hx<global_JxlData_len;hx++){
        potential_val = global_JxlData[hx].Potential1;
        if(potential_val == null){
            global_JxlData[hx].Potential1 = "";
        }else{
            /* if(Object.is(parseInt(potential_val),NaN) == false || Object.is(parseInt(potential_val),NaN) == "false")
            {
                var val = potential_val != null && potential_val != '' ?parseFloat(potential_val):0;
                 var lengthN = countDecimals(val)
                        gridPcheck =true 
                potential_val =val;//numc+'.'+secnum;
            } */
            var valueP = potential_val;
            if(valueP == null){
                valueP = '';
            }
            try{
                if(typeof valueP == 'number'){
                    var result = true;
                }
                else{
                    var result = /^-?\d+$/.test(valueP.replace('.',''));
                }
            }
            catch{
                console.log(valueP);
            }
            if(result){
                var val = potential_val != null && potential_val != '' ?parseFloat(potential_val):0;
                 var lengthN = countDecimals(val)
                        gridPcheck =true 
                global_JxlData[hx].Potential1 =val;//numc+'.'+secnum;
            }
            else if(new Date(valueP) != 'Invalid Date'){
                var val = formatDateF(new Date(valueP));
                global_JxlData[hx].Potential1 =val;
            }
        } 
    }
}
 if(sortingApply && moved){
    moved = false;
    clickapplyrescsorting(sortingType)			
    //moved = false;
    return;
}

GanttGridView_lbl=[];
 $("#divw1").show()

$($("#gantt").find('thead').find('th')[1]).text("Potential Ideas / Projects")
//$('#gantt').leftScrollbar();
    //alert(JData)
    //var GridData = JSON.parse(JData);



  var TempGridData = JData;
const GridData = [];

for (let i = 0; i < TempGridData.length; i++) {
  const object = TempGridData[i];
  const projectname = object.Projectname;

  if (projectname) {
    const words = projectname.split(' ');

    // Check if the first word is a scientific notation value
    if (/^\d+(\.\d+)?e\+\d+$/.test(words[0])) {
      const numberValue = parseFloat(words[0]);
      const formattedNumberValue = numberValue.toLocaleString();
      words[0] = formattedNumberValue;
    } else {
      // Check if the first word is a numeric value
      const numericValue = parseFloat(words[0]);

      // Check if the first word is a date-like value
      const isDateLike = /^\d{4}-\d{2}-\d{2}$/.test(words[0]);

      if (!isNaN(numericValue) && !isDateLike) {
        // Format the numeric value with commas using toLocaleString
        const formattedNumericValue = numericValue.toLocaleString();
        words[0] = formattedNumericValue;
      }
    }

    const modifiedProjectname = words.join(' ');
    const newObject = {
      ...object,
      Projectname: modifiedProjectname,
    };
    GridData.push(newObject);
  } else {
    GridData.push(object);
  }
}



    $('#ganttGrid').html("");
    var array_resource=[]
    /*$.each(GridData, function (indx, data) {			
        var Potential1 = data.Potential1
            if(Potential1 != null && Potential1 != ''){
                Potential1 = parseFloat(Potential1);
                var pnm = countDecimals(Potential1)
                var numscon = Potential1
                //     numscon numberWithCommas(numscon)
                return data.Potential1 = numscon;
            }
            else{
                Potential1 = ''
                return data.Potential1 = '';
            }
        
    });*/
    var updatefncall = function (obj, cel, val) {  }
    
    var keys = Object.keys(GridData[0]);
    for (var i = 0; i < keys.length; i++) {
        if(keys[i]=="Projectuid" || keys[i]=="Projectname" || keys[i]=="resourceName" || keys[i]=="StackRank" || keys[i]=="NewRank" || keys[i]=="Potential1"){ 
            if(keys[i]=="Projectuid"){
                array_resource.push({
                    type: 'text',
                    //columnDrag: true,
                    title: keys[i],
                    width: 308,
                    readOnly: true ,
                });
            }
            
            else if(keys[i]=="Potential1"){
                if(potentialItm_flag && potentialItm_Val != ''){
                    array_resource.push({
                        type: 'text',
                        //columnDrag: true,
                        title: potentialItm_Val,
                        width: 78,
                    });
                }
                else{
                    array_resource.push({
                        type: 'text',
                        //columnDrag: true,
                        title: keys[i],
                        width: 78,
                    });
                }
                
            }
            else{
                if(potentialItm_flag && potentialItm_Val != '' ){
                    if(keys[i]=="Projectname"){
                        array_resource.push({
                            type: 'text',
                            //columnDrag: true,
                            title: keys[i],
                            width: 150,
                            
                        });
                    }
                    else{
                        array_resource.push({
                            type: 'text',
                            //columnDrag: true,
                            title: keys[i],
                            width: 78,
                        });
                    }
                }
                else{
                    if(keys[i]=="Projectname"){
                        array_resource.push({
                            type: 'text',
                            //columnDrag: true,
                            title: keys[i],
                            width: 78,
                            
                        });
                    }
                    else{
                        array_resource.push({
                            type: 'text',
                            //columnDrag: true,
                            title: keys[i],
                            width: 78,
                        });
                    }
                }
                
            }	
        }
        else{ if(keys[i]!="Prefix1"){
 var dateNew= new Date(keys[i])
                array_resource.push({
                    type: 'numeric',
                    //columnDrag: true,
                    title: dateNew.getFullYear() +" " + monthNames[dateNew.getMonth()],
                    width: 75,
                });		
        } 				
               		
        }
    }
    var Start1= new Date(keys[keys.length-1]);
    var newEnd1 = new Date(Start1);
    for(var i=1;i<=12;i++){		
        newEnd1 = new Date(Start1.setMonth(Start1.getMonth()+1));
        var dateNew= new Date(newEnd1)
        array_resource.push({ 
            type: 'numeric',
            //columnDrag: true,
            title: dateNew.getFullYear() +" " + monthNames[dateNew.getMonth()],
            width: 75,
            mask:'#,##.00 %', decimal:'.'
        });
        Start1= newEnd1;
    }
    $('#ganttGrid').html('')
    if(GridData[0].Projectuid== null){
        GridData.splice(0,1)
    }


   

    Gridtable = jexcel(document.getElementById('ganttGrid'), {
        data: GridData,
        columns: array_resource,
        //columnDrag:true,
        columnResize:false,
        columnSorting:false,
        //	 onchange:updatefncall,
        updateTable:function(instance, cell, col, row, val, label, cellName) {
            console.log("updateTable");
        },
        onsort:function(instance, cell, col, row, val, label, cellName) {
            console.log("updateTable");
        },
    });

    TestGlobal = Gridtable;

    if(ck==0){
    clickapplyrescsorting(1);
    ck++; 
}
    Gridtable.hideIndex(0);
    //$('#ganttGrid').find('table').find('tr').eq(0).find('td').eq(5).html('<span class="pointer" style="float: center;" onclick="fnsortGridData()" title="Sort">Rank<span class="k-icon k-i-sort-desc"></span></span>')
    // Gridtable.orderBy(2,1);
    var headerhide=0;
    $('#ganttGrid').find('table').find('tr').each(function(){ 						 
        $(this).find('td').eq(1).hide();
        $(this).find('td').eq(4).hide();
        if(!potentialItm_flag || potentialItm_Val == ''){
            $(this).find('td').eq(3).hide();
        }
        if(headerhide!=0){
            if($(this).find('td').eq(2).text()!=$(this).find('td').eq(4).text()){
                $(this).hide();
                $(this).attr('data-res',$(this).find('td').eq(4).text());
                $(this).find('td').eq(2).css('text-align','left');
                $(this).find('td').eq(2).css('padding-left','30px')
            }
            else{
                GanttGridView_lbl.push($(this).find('td').eq(2).text())
                $(this).find('td').eq(2).css('text-align','left');
                $(this).find('td').eq(2).html('<a class="showhiderowres" style="cursor:pointer" onclick="return ACCbtnClick(this)"><span class="k-icon k-i-arrow-60-right"></span>'+$(this).find('td').eq(2).text()+'</a>')								
                $(this).attr('data-rollup',$(this).find('td').eq(4).text());
                $(this).addClass("rollupheader");
            }
                $(this).find('td:gt(5)').attr("data-Rank","NoRank")
                $(this).find('td').eq(5).attr("data-Rank","NoRank")
                $(this).find('td').eq(6).attr("data-Rank","NoRank")
            
        }
        headerhide=1;
    });
    var  projList=[];
    $('#drp_resources').find('option:selected').each(function(){
        console.log($(this).text())
        projList.push($(this).text())
    });
                      
                     $('#ganttGrid').find('table').find('tbody').find('td').each(function(){ 
                        var cellval=$(this).text()
                        cellval=cellval.replace(' %','');
                        var PName=$(this).closest('tr').find('td').eq(2).text()
                        var PID=$(this).closest('tr').find('td').eq(1).text()
                        var RName=$(this).closest('tr').find('td').eq(4).text()
                        var countUsers=1;
                        
                        
                        if(PName==RName)
                        {
                            if($(this).closest('tr').find('td').eq(1).text().length<20)
                            {
                                try
                                {
                            countUsers=parseInt($(this).closest('tr').find('td').eq(1).text())
                            if(countUsers==-1)
                            {
                                countUsers=1
                            }
                                }
                                catch(err)
                                {
                                    countUsers=1;
                                }
                            
                            }
                            if(PName=='Large Molecule Analytical')
                            {
                                var tt=0;
                            }
                            
                            // 85-95 yellow 95-105 green 115+ red   hover color 85-
                            if($.isNumeric(cellval))
                            {
                            if($(this).attr('data-Rank')=="NoRank")
                            {
                            var cellvalc=parseFloat(cellval)
                            $(this).text(cellvalc.toFixed(2)) 
                            if(cellvalc==16600)
                            {
                                var uu=0;
                            }
                            if(cellvalc>=(1*countUsers))   // +115
                            {
                                /* $(this).css("background-color","#ff6e69");   // red
                                $(this).css("color","white"); */
                            }
                            if(cellvalc<(1*countUsers) && cellvalc >=(.85*countUsers))  //105-115 or 85-95
                            {
                                /* $(this).css("background-color","#88d8b0"); // green
                                $(this).css("color","black"); */
                                /* 
                                $(this).css("background-color","#ffcb5c");  //yellow
                                $(this).css("color","black"); */
                            }
                            if(cellvalc<(.85*countUsers))     // 95-105 
                            {
                                
                            //	$(this).css("background-color","#ffcb5c");  //yellow
                                //$(this).css("color","black");
                            }
                            }
                            }
                            
                            
                        }
                        else
                        {
                            if(projList.indexOf(PName)==-1)
                            //if(PID.length == 36)
                            {
                                $(this).addClass('readonly'); 
                                $(this).css("background-color","#F2F2F2"); 
                                $(this).css("color","black");	
                                if($(this).closest('tr').find('td').eq(1).text().length == 36){
                                    $(this).attr('Title','Project')
                                }
                                else
                                {
                                    $(this).attr('Title','Idea')
                                }
                                

                                //.css("background-color","light");
                            }
                            else{
                                    $(this).addClass('readonly'); 
                                    $(this).css("background-color","white"); 
                                    $(this).css("color","black");	
                                    if($(this).closest('tr').find('td').eq(1).text().length == 36){
                                    
                                    $($($(this).closest('table').find('tr')[0]).find('td').eq(2)).attr('Title','Role Details')
                                    $($($("#gantt").closest('div').find('table')[0]).find('tr').find('th')[1]).attr('data-title','');
                                    

                                $(this).attr('Title','Potential Project')
                                        }
                                        else
                                        {
                                            $(this).attr('Title','Potential Idea')
                                        }
                            }
                            
                        }
                        
                        
                        
                        
                        
                     });
                     console.log( $('#ganttGrid').find('tr').eq(0).find('td').length)
                     
                      $('#ganttGrid').find('tr').eq(0).find('td').each(function(index){
                          console.log(index)
                          if(index>=6)
                          {
                              var colName=$(this).text();
                              var Sel_colName=colName.split(' ')
                              var sel_colName_Mon=monthNames.indexOf(Sel_colName[1])
                               var colDateS = new Date(Sel_colName[0],sel_colName_Mon,6);
                               var colDateF = new Date(Sel_colName[0],parseInt(sel_colName_Mon)-1,3);
                               if(colDateS>=GanttStart && colDateF<=GanttFinish)
                               {	 //$('#ganttGrid').find('td[data-x="'+parseInt(index-2).toString()+'"]').first().text(colDateF+ colName + index + colDateS)
                                    $('#ganttGrid').find('td[data-x="'+parseInt(index-2).toString()+'"]').show()
                                    console.log("IF : "+colName + index)
                               }
                               else
                               {	console.log("Else : "+colName + index)
                                    $('#ganttGrid').find('td[data-x="'+parseInt(index-2).toString()+'"]').hide()
                                    //$('#ganttGrid').find('td[data-x="'+parseInt(index-2).toString()+'"]').first().text(colDateF+ colName + index + colDateS)
                               }
                          }
                          
                          $($('#ganttGrid').find('td[data-x="1"]')[0]).text("Role Details")
                           
                                                       
                      });
                      var GrLen= $('#ganttGrid').find('tr').eq(0).find('td').length
                      $('#ganttGrid').find('td[data-x="'+parseInt(GrLen-2).toString()+'"]').hide();
                      
                       $('#ganttGrid').find('td[data-x="1"]').css('left','0');
                       $('#ganttGrid').find('td[data-x="1"]').css('position','sticky');
                       $($('#ganttGrid').find('td[data-x="1"]').eq(0)).css('left','0');
                       $($('#ganttGrid').find('td[data-x="1"]').eq(0)).css('position','sticky');
                       $($('#ganttGrid').find('td[data-x="1"]').eq(0)).css('z-index','5000');
                       $($('#ganttGrid').find('td[data-x="1"]').eq(0)).css('overflow','inherit');
                      // $($('#ganttGrid').find('td[data-x="1"]').eq(0)).css('top','0');
                       //$($('#ganttGrid').find('td[data-x="1"]').eq(0)).closest('table').css('top','0');
                       $($('#ganttGrid').find('td[data-x="1"]').eq(0)).css('width','600px')
                        
                        $('#ganttGrid').find('td[data-x="1"]').addClass('readonly');
                        if(potentialItm_flag){
                            $('#ganttGrid').find('td[data-x="2"]').addClass('readonly');
                            $('#ganttGrid').find('td[data-x="2"]').eq(0).css('overflow','inherit');
                            $('#ganttGrid').find('td[data-x="2"]').eq(0).css('z-index','4000');
                        }
                         
                         
                          $($('#gantt').find('div').next()[0]).css('left','0');
                          $($('#gantt').find('div').next()[0]).css('z-index','9000');
                          $($('#gantt').find('div').next()[0]).css('position','sticky');
                       
                       
                
                     
    
    SetStateofExpand();
    setcustom_Capacity_attribute(Resources_array);
    //if(!sortingApply){
        sortOptionConfig();
    //}
    if(gridPcheck){
     $('#ganttGrid').find('tr').each(function(index){
        var textchanges=$("#ganttGrid").find('tbody').find('tr').eq(index).find('td').eq(3).text()
        if(textchanges != ''){
            textchanges =numberWithCommas(textchanges)
            $("#ganttGrid").find('tbody').find('tr').eq(index).find('td').eq(3).text(textchanges)
        }		
    
     });
    }
    //sortingApply =  false;
}	

    
var ignore_col = [];
function setcustom_Capacity_attribute(arr){
    $('#ganttGrid').find('tr.rollupheader').each(function(x){
        ignore_col = [];
        var resName = $(this).find('td').eq(2).text();
        var capacity = parseFloat(resName.match(/\d+/)[0]).toFixed(2);
        //debugger
        $(this).find('td:gt(3)').each(function(y){
            var index = $(this).index();
            var header = $('#ganttGrid').find('thead').find('tr').find('td').eq(index).text();
            var item =  arr.filter(function(x){
                return x.Projectname ==  resName;
            });
            if(item.length > 0){
                for(k in item[0]){
                    if(k!='Projectname' || k!='Projectuid' || k!='resourceName'){
                        var dt = new Date(k)
                        if(header == dt.getFullYear() +" " + monthNames[dt.getMonth()]){
                            $(this).attr('capacity',item[0][k]);
                            if(item[0][k] == null){
                                item[0][k] = 0;
                            }
                             
                            if(MaxUnitFilter){
                                 capacity = parseFloat(item[0][k]).toFixed(2);
                            }
                            else{
                            
                              $(this).attr('capacity',capacity);
                            
                            }
                            
                            var demand = parseFloat($(this).text()).toFixed(2);
                            var availablity = capacity - demand;
                            $(this).attr('data-title','Capacity: '+capacity+'\nDemand: '+demand+'\nAvailablity: '+parseFloat(availablity).toFixed(2)+'')
                        }
                    }
                }
            }
            colorSet($(this),ignore_col);
        });
    });
}
function ACCbtnClick(a)
     {
         var datasource = $("#gantt").data('kendoGantt').dataSource.data();
         var selProjName=[];
          if(datasource !== null)
        {
            datasource.forEach(function(item){                  
              selProjName.push(item.title) 
            });
        }
         var rowname=$(a).closest('tr').attr('data-rollup');
         $("tr[data-res='"+rowname+"']").each(function(){ 
            if($(this).is(':visible'))
            {					
                $(this).hide();
                $($(a).find('span')).removeClass('k-i-arrow-60-down')
                $($(a).find('span')).addClass('k-i-arrow-60-right')
                GanttGridView_State[GanttGridView_lbl.indexOf(rowname)]=false
                
            }
            else
            {					
                $(this).show();
                $($(a).find('span')).removeClass('k-i-arrow-60-right')
                $($(a).find('span')).addClass('k-i-arrow-60-down')
                GanttGridView_State[GanttGridView_lbl.indexOf(rowname)]=true
                
            }
            if($("#chkProjectResources").is(":checked"))
            {
                var projectrow=$(this).find('td').eq(2).text()
                if(selProjName.indexOf(projectrow)!=-1)
                {
                    
                }
                else
                {
                    $(this).hide()
                }
            }
            
         });
         
     }
     
function ShowAllGanttGrid()
{
    if($("#chkShowALL").is(":checked"))
    {
    $('#ganttGrid').find('tr').show()
    $('.rollupheader').each(function(){
        $(this).find('td').eq(2).find('span').removeClass('k-i-arrow-60-right')
        $(this).find('td').eq(2).find('span').removeClass('k-i-arrow-60-down')
        $(this).find('td').eq(2).find('span').addClass('k-i-arrow-60-down')
        
    })
    }
    else
    {
        $('#ganttGrid').find('tbody').find('tr').hide();
        $('.rollupheader').each(function(){
        $(this).show()
        $(this).find('td').eq(2).find('span').removeClass('k-i-arrow-60-down')
        $(this).find('td').eq(2).find('span').removeClass('k-i-arrow-60-right')
        $(this).find('td').eq(2).find('span').addClass('k-i-arrow-60-right')
        
    })
        
    }
}
var chktrue = false
function ShowOnlySelectedRows()
{
    var datasource = $("#gantt").data('kendoGantt').dataSource.data();
    var selProjName=[];
      if(datasource !== null)
        {
            datasource.forEach(function(item){                  
              selProjName.push(item.title) 
            });
        }
    
    
    
    if($("#chkProjectResources").is(":checked"))
    {
        
        /* $('#ganttGrid').find('tbody').find('tr').hide();			
        $('#ganttGrid').find('tbody').find('tr').each(function(){
            
            var projectrow=$(this).find('td').eq(2).text()
            if(selProjName.indexOf(projectrow)!=-1)
            {
                $(this).show();
            }
        
            });		
        
        $('.rollupheader').each(function(){
        $(this).show()
        $(this).find('td').eq(2).find('span').removeClass('k-i-arrow-60-down')
        $(this).find('td').eq(2).find('span').removeClass('k-i-arrow-60-right')
        $(this).find('td').eq(2).find('span').addClass('k-i-arrow-60-down')
        
    }) */
    
    
        chktrue = true;
        //getGridDataClick();
        getGridDataClickWithFilters()
    
    //cleanandupdateGridCellsV3(selProjName2);
        
    }
    else
    {
        chktrue = false
        //ShowAllGanttGrid();
        //getGridDataClick();
        getGridDataClickWithFilters()
    }
        

}



     
function SetStateofExpand()
{
    if(GanttGridView_lbl !=[])
    {
    for(i=0;i<GanttGridView_lbl.length;i++)
    {
        if(GanttGridView_State[i]==true || $("#chkShowALL").is(":checked"))
        {
            $('tr[data-rollup="'+GanttGridView_lbl[i]+'"]').find('a').click()
        }
    }
    }
    
    
    $($('#ganttGrid').find('td[data-x="1"]')).each(function(index){
                    if($(this).prop('title') != 'Potential Project' && $(this).prop('title') != 'Project' && $(this).prop('title') != 'Potential Idea')
                           {
                                $(this).css('background','#DCF9FD');
                           }
                       
                       });
    
}		
     
function GenerateGanttChart(GanttData,linkingData,depData)
{		
    var G_tree_wd = '305px';
    var G_col1_wd = 55;
    var G_col2_wd = 250;
    if(potentialItm_flag && potentialItm_Val != ''){			
        G_tree_wd = '454px';
        G_col1_wd = 82;
        G_col2_wd = 372;
    }
    else{
        G_tree_wd = '305px';
        G_col1_wd = 55;
        G_col2_wd = 250;
    }



    var GanttGridData = new kendo.data.GanttDataSource({
           data:GanttData,	
       schema: {
                model: {
                    id: "id",
                    fields: {
                        id: { from: "ID", type: "number" },
                        orderId: { from: "orderId", type: "number", validation: { required: true } },
                        parentId: { from: "ParentID", type: "number", defaultValue: null, nullable: true, validation: { required: true } },
                        start: { from: "Start", type: "date" },
                        end: { from: "Finish", type: "date" },
                        title: { from: "Title", defaultValue: "", type: "string" },
                        percentComplete: { from: "percentComplete", type: "number" },
                        summary: { from: "Summary", type: "boolean" },
                        expanded: { from: "Expanded", type: "boolean", defaultValue: true },
                        Projectuid:{ from: "Projectuid", defaultValue: "", type: "string" },
                        //StackRank: { from: "StackRank", type: "number" }
                    }
                }
            }
        });
    
     var dependenciesDataSource = new kendo.data.GanttDependencyDataSource({
           data:depData,
           
            schema: {
                model: {
                    id: "id",
                    fields: {
                        id: { from: "ID", type: "number" },
                        predecessorId: { from: "PredecessorID", type: "number" },
                        successorId: { from: "SuccessorID", type: "number" },
                        type: { from: "Type", type: "number" }
                    }
                }
            }
        });
        
    $("#gantt").html("")
    $("#gantt").kendoGantt({
        tooltip: {
            visible: true,
            template: "Idea: #= task.title #"
        },
        dataSource: GanttGridData,
                            //dependencies: dependenciesDataSource,

        views: [
        "day",
        "week",
        "month"
        ,{ 	 type: "year"
            ,yearHeaderTemplate: "#=''#"
            ,monthHeaderTemplate: "#=kendo.toString(start, 'yyyy MMM ')#"
            , selected: true
            ,slotSize: 75 }
        ],
         height: 300, 
            range: {
                    start: GanttStart,
                    end:GanttFinish
                },
            listWidth: G_tree_wd,
            showWorkHours: false,
            showWorkDays: false,
            snap: false,
            editable: {
            create: false,				
            resize: false,
            resizable: false,
            destroy: false,
            dependencyCreate: false,
            dragPercentComplete: false			
            },
            
            dataBound: onDataBound,
        //	save: onSave,
            move: onMove,
            moveEnd: onMoveEnd,
            moveStart: onMoveStart,
            edit: onEdit,
columns: [
{ field: "Projectuid", width: G_col1_wd},
{ field: "title", title: "Idea", editable: false, width: G_col2_wd },
//{ field: "StackRank", title: "Stack Rank", editable: false, width: 65 },
              //  { field: "start", title: " Start ", format: "{0:M/d/yyyy}", editable: true, width: 80 },
              //  { field: "end", title: " End ", format: "{0:M/d/yyyy}", editable: true, width: 80 },
              //  { field: "percentComplete", title: "% Complete", type: "number", editable: true, width: 50 }	
                   
]

}).data("kendoGantt");

$('#gantt').find('table[role="treegrid"]').find('tr').each(function(index){

var rpname=$(this).find('td').eq(0).text();
//$(this).find('td').eq(0).html("<input  type='button' class='k-button btn-summary' onclick=CommitSingleprojectFilter('"+rpname+"') value='Commit' style='width:30px;' />");
$(this).find('td').eq(0).html('<span class="pointer" style="float: center;" onclick=CommitSingleprojectFilter("'+rpname+'") title="Commit"><span class="k-icon k-i-save"></span></span><span class="pointer" style="float: center;margin-left: 5px;" onclick=EditSingleproject("'+rpname+'") title="Edit"><span class="k-icon k-i-edit"></span></span>');



})	
$('[role="treegrid"]').css('display', 'contents');
var ganntWidget = $("#gantt").data('kendoGantt');
ganntWidget._resizeDraggable.destroy();
$('.k-splitbar').css('cursor','auto')
//var a = $("#gantt").find('div').next().next().next().width()
//$($("#gantt").find('div').next().next().next()).css("width", a - 500);

//$('#gantt').leftScrollbar();

}


function onDataBound(e) {
            //alert("Gantt data bound");
            var grid = $("#gantt").data("kendoGantt");
            for(i=0;i<grid.dataSource.data().length;i++)
            {
                if(grid.dataSource.data()[i].title==ChangedProject)
                {
                    if(GanttStart > grid.dataSource.data()[i].start)
                    {
                        e.preventDefault();
                    }
                    else
                    {
                        if(GanttFinish < grid.dataSource.data()[i].end)
                        {
                            e.preventDefault();
                        }
                        else
                        {
                         ChangedProjectStartNew=grid.dataSource.data()[i].start
                         ChangedProjectEndNew=grid.dataSource.data()[i].end
                        }
                        
                    }
            
                    
                    
                }
            }					
            
        //	console.log("Task bound :: " + grid.dataSource.data()[9].start);
            cleanandupdateGridCellsV2();
        }
var moved = false;
function onMove(e) {
            moved = true;
            console.log("Move: Start:"+e.task.start)
            console.log("Move: End:"+e.task.end)
            if(GanttStart > e.task.start)
            {
                e.preventDefault();
            }
            if(GanttFinish < e.task.end)
            {
                e.preventDefault();
            }
            
        
        }			
function onMoveEnd(e) {
            
            console.log(e.task.end)
            console.log("onMoveEnd: Start:"+e.task.start)
            console.log("onMoveEnd: Start:"+e.task.end)
            //console.log("Task saved :: " + grid.dataSource.data()[9].start);
            console.log("Task saved :: " + e.task.start);
            ChangedProject= e.task.title;
            ChangedProjectStart=e.task.start;
            ChangedProjectEnd=e.task.end;
        }

function onMoveStart(e)
{
    
    //e.preventDefault();
    console.log("onMoveStart: Start:"+e.task.start)
            console.log("onMoveStart: Start:"+e.task.end)
            if(GanttStart > e.task.start)
            {
                e.preventDefault();
            }
            if(GanttFinish < e.task.end)
            {
                e.preventDefault();
            }

}	




function onEdit(e) {
        if ($(e.container).hasClass('k-popup-edit-form')) {
e.preventDefault();
}
}

function EditSingleproject(a)
{var win;
        //alert("clicked");
        if(a.length == 36)
        {
            win = window.open('https://projectmadeeasy.sharepoint.com/sites/development/project%20detail%20pages/projectallocation.aspx?projuid='+a, '_blank');
        }
        else
        {
            win = window.open('https://apps.powerapps.com/play/19489e5e-8d22-4d31-b61e-d44715dba16d?tenantId=7498a69f-ca0f-482c-b0d0-0469cf971375&RA=1&IdeaID='+a, '_blank');	
        }
        
    if (win) {
        //Browser has allowed it to be opened
        win.focus();
    } else {
        //Browser has blocked it
        alert('Please allow popups for this website');
    }
}	
var sortidx=0;
function fnsortGridData()
{
if(sortidx%2==0)
{
    Gridtable.orderBy(2,1);
}
else
{
    Gridtable.orderBy(2,0);
}
sortidx++;

}

var  data_push = []
function CommitSingleproject(a)
{ 
data_push = []
var gantt = $("#gantt").data("kendoGantt");

$('#gantt').find('table[role="treegrid"]').find('tr').each(function(index){
    var task = gantt.dataItem("tr:eq("+index+")");
    if(a.toString()==task.Projectuid.toString())
    {
         var objsec = {};
         objsec.Projectuid = task.Projectuid.toString();
         objsec.Start =new Date(task.start);
          data_push.push(objsec);
        
    }
});
var allData ="'"+ JSON.stringify(data_push)+"'";
    $.LoadingOverlay("show");
    $.ajax({
            url: azurewebsites+'/Api/GanttUpdated/Commit',
            type: 'POST',
            async: true,
            processData: false,
            cache: false,
            data: allData,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                //// debugger;
               console.log("Success")
               $.LoadingOverlay("hide");
               updateaftercommit();
            },
            error: function (err) {
                
                console.log("Error")
                $.LoadingOverlay("hide");

            }
        });



}
function CommitSingleprojectFilter(a)
{ 
data_push = []
var gantt = $("#gantt").data("kendoGantt");

$('#gantt').find('table[role="treegrid"]').find('tr').each(function(index){
    var task = gantt.dataItem("tr:eq("+index+")");
    if(a.toString()==task.Projectuid.toString())
    {
         var objsec = {};
        /*  objsec.Projectuid = task.Projectuid.toString();
         objsec.Start =new Date(task.start); 
          data_push.push(objsec);*/
        objsec.FilterText = task.Projectuid.toString();
        objsec.FilterValue = JSON.stringify( new Date(task.start)).toString().replaceAll('"', "");//new Date(task.start); 
        objsec.FilterType = "Project";
        data_push.push(objsec);
        /*                           Filter Values Start                                */
        var Filter1;				
        if($($("#dynmaicddn").find('td')[0]).find('select').val()==null || $($("#dynmaicddn").find('td')[0]).find('select').val()=='')
        {
            Filter1 = "1"
        }
        else
        {
            Filter1 = $($("#dynmaicddn").find('td')[0]).find('select').val().join("|")
        }
        
        var Filter2;	
        
        if($($("#dynmaicddn").find('td')[1]).find('select').val()==null || $($("#dynmaicddn").find('td')[1]).find('select').val()=='')
        {
            Filter2= "1"
        }
        else
        {
            Filter2 = $($("#dynmaicddn").find('td')[1]).find('select').val().join("|")
        }
        
        var Filter3;	
        
        if($($("#dynmaicddn").find('td')[2]).find('select').val()==null || $($("#dynmaicddn").find('td')[2]).find('select').val()=='')
        {
            Filter3 = "1"
        }
        else
        {
            Filter3 = $($("#dynmaicddn").find('td')[2]).find('select').val().join("|")
        } 
        
        var Filter4;	
        
        if($($("#dynmaicddn").find('td')[3]).find('select').val()==null || $($("#dynmaicddn").find('td')[3]).find('select').val()=='')
        {
            Filter4 = "1"
        }
        else
        {
            Filter4 = $($("#dynmaicddn").find('td')[3]).find('select').val().join("|")
        }
        
        var Filter5;	
        
        if($('#ddl_HireStatus').val()==undefined || $('#ddl_HireStatus').val()=="undefined" || $('#ddl_HireStatus').val()==null || $('#ddl_HireStatus').val()=='')
        {
            Filter5 = "1"
        }
        else
        {
            Filter5 = $('#ddl_HireStatus').val().toString();
        }
        /*                           Filter Values End                                */
        
        data_push.push({"FilterText":"Filter1","FilterValue":Filter1,"FilterType":"Filter" })
        data_push.push({"FilterText":"Filter2","FilterValue":Filter2,"FilterType":"Filter"})
        data_push.push({"FilterText":"Filter3","FilterValue":Filter3,"FilterType":"Filter"})
        data_push.push({"FilterText":"Filter4","FilterValue":Filter4,"FilterType":"Filter"})
        data_push.push({"FilterText":"Filter5","FilterValue":Filter5,"FilterType":"Filter"})
        
    }
});
    var allData ="'"+ JSON.stringify(data_push)+"'";
    $.LoadingOverlay("show");
    $.ajax({
            url: azurewebsites+'/Api/GanttUpdated/CommitFiltered',
            type: 'PUT',
            async: true,
            processData: false,
            cache: false,
            data: allData,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                //// debugger;
               console.log("Success")
               $.LoadingOverlay("hide");
                 updateaftercommit();
              
            },
            error: function (err) {
                
                console.log("Error")
                $.LoadingOverlay("hide");

            }
        });
}


function updateaftercommit()
{


    $.ajax({        	      
                          url: azurewebsites+'/Api/GanttUpdated_ProjectList/9FA7C3AC-3564-4836-9A50-8951792AF1B4/1 2020/2 2020',                              
                          type: 'GET',
                          async: false,
                          processData: false,
                          cache: false,              
                          contentType: false,
                          dataType: 'json',
                          success: function (data) {
                              
                        	
                          
                           var ResponseTable= JSON.parse(data)
                          
                    
                          
                      var GanttData = ResponseTable.Table;
                      


                          strOptions=""
                          
                          for (var i = 0; i < GanttData.length; i++) 
                          {							
                            
                            // arr_ProjectNo.push(GanttData[i].Projectuid)
                            // arr_ProjectStart.push(GanttData[i].Start)
                            // arr_ProjectFinish.push(GanttData[i].Finish)
                             if(arr_ProjectNo.indexOf(GanttData[i].Projectuid)!=-1)
                             { var idxsp=arr_ProjectNo.indexOf(GanttData[i].Projectuid)
                               arr_ProjectStart[idxsp]=(GanttData[i].Start)
                                arr_ProjectFinish[idxsp]=(GanttData[i].Finish)
                             }
                             
                          }										  
                        
                          },
                          error: function (err) {
                            alert(err);
                          }
                      });         	
}



function updateaftercommitBeforeAnalyze()
{
sortingApply=false; sortingType = 1;
    $.ajax({      	      
                          url: azurewebsites+'/Api/GanttUpdated_ProjectList/9FA7C3AC-3564-4836-9A50-8951792AF1B4/1 2020/2 2020',                              
                          type: 'GET',
                          async: false,
                          processData: false,
                          cache: false,              
                          contentType: false,
                          dataType: 'json',
                          success: function (data) {
                          
                          
                           var ResponseTable= JSON.parse(data)
                          
                    var GanttData = ResponseTable.Table;
                    
                       
                          strOptions=""
                          
                          for (var i = 0; i < GanttData.length; i++) 
                          {							
                            
                            // arr_ProjectNo.push(GanttData[i].Projectuid)
                            // arr_ProjectStart.push(GanttData[i].Start)
                            // arr_ProjectFinish.push(GanttData[i].Finish)
                             if(arr_ProjectNo.indexOf(GanttData[i].Projectuid)!=-1)
                             { var idxsp=arr_ProjectNo.indexOf(GanttData[i].Projectuid)
                               arr_ProjectStart[idxsp]=(GanttData[i].Start)
                                arr_ProjectFinish[idxsp]=(GanttData[i].Finish)
                             }
                             
                          }										  
                           getGridDataClickWithFilters();
                          },
                          
                          error: function (err) {
                            alert(err);
                            getGridDataClickWithFilters();
                          }
                      });     
                       

}



function CommitAllChangeproject()
{ 
data_push = []
var gantt = $("#gantt").data("kendoGantt");

$('#gantt').find('table[role="treegrid"]').find('tr').each(function(index){
    var task = gantt.dataItem("tr:eq("+index+")");
    //if(a.toString()==task.Projectuid.toString())
    {
         var objsec = {};
         objsec.Projectuid = task.Projectuid.toString();
         objsec.Start =new Date(task.start);
          data_push.push(objsec);
        
    }
});
var allData ="'"+ JSON.stringify(data_push)+"'";

    $.ajax({
            url: azurewebsites+'/Api/GanttUpdated/Commit',
            type: 'POST',
            async: true,
            processData: false,
            cache: false,
            data: allData,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                //// debugger;
               console.log("Success")
            },
            error: function (err) {
                
                console.log("Error")

            }
        });



}

var getAjex =function(URL){ 
var data;
 $.LoadingOverlay("show");
  $.ajax({
          url: URL,
          type: 'GET',
          async: false,
          processData: false,
          cache: false,  
          contentType: false,
          dataType: 'json',
        //  success: onQuerySucceeded,
          //error: onQueryFailed
         success: function (success) {
            // console.log(success)
                        $.LoadingOverlay("hide");	 
                data = success
          },
          error: function (error) {
               $.LoadingOverlay("hide");
                data= error;
          }
      });
     
return data;

}


function compare_to_sort(x,y) 
 {
  if (x.Title < y.Title)
    return -1;
  if (x.Title > y.Title)
    return 1;
  return 0;
}
function colorSet(target,ignore_col){		
    var footercon = '';
    var colindxcheck = [];
    var columnmap = [];
    var obj = {}
    var rowV;
    var colIndx = target.index();
    $.each(FotColor, function (indx, MGrid) {
        obj = {};
        if(MGrid.Display){
            var cls= MGrid.ProjectFilter				  
                if(MGrid.Formula == 'Less than|lt'){
                    var has_capacity = target.attr('capacity');
                    if(has_capacity !== undefined){
                        var calc = (parseFloat(has_capacity) * MGrid.ProjectFilterValue)/100;
                        var demand = parseFloat(target.text());
                        if(calc > demand){
                            if(ignore_col.indexOf(colIndx) == -1){
                                if(demand!=0){
                                  target.css('background-color',cls)
                                  ignore_col.push(colIndx);
                                }
                            }							
                        }
                    }
                }				
                if(MGrid.Formula == 'Less than or equal to|le'){
                    var has_capacity = target.attr('capacity');
                    if(has_capacity !== undefined){
                        var calc = (parseFloat(has_capacity) * MGrid.ProjectFilterValue)/100;
                        var demand = parseFloat(target.text());
                        if(calc >= demand){
                            if(ignore_col.indexOf(colIndx) == -1){
                                if(demand!=0){
                                  target.css('background-color',cls)
                                  ignore_col.push(colIndx);
                                }
                            }	
                        }
                    }					
                }
                
                if(MGrid.Formula == 'Equal to|eq'){
                    var has_capacity = target.attr('capacity');
                    if(has_capacity !== undefined){
                        var calc = (parseFloat(has_capacity) * MGrid.ProjectFilterValue)/100;
                        var demand = parseFloat(target.text());
                        if(calc == demand){
                            if(ignore_col.indexOf(colIndx) == -1){
                                if(demand!=0){
                                  target.css('background-color',cls)
                                  ignore_col.push(colIndx);
                                }
                            }	
                        }
                    }
                }
                if(MGrid.Formula == 'Greater than|gt'){
                    var has_capacity = target.attr('capacity');
                    if(has_capacity !== undefined){
                        var calc = (parseFloat(has_capacity) * MGrid.ProjectFilterValue)/100;
                        var demand = parseFloat(target.text());
                        if(calc < demand){
                            if(ignore_col.indexOf(colIndx) == -1){
                                if(demand!=0){
                                  target.css('background-color',cls)
                                  ignore_col.push(colIndx);
                                }
                            }	
                        }
                    }						
                }
                if(MGrid.Formula == 'Greater than or equal to|ge'){
                    var has_capacity = target.attr('capacity');
                    if(has_capacity !== undefined){
                        var calc = (parseFloat(has_capacity) * MGrid.ProjectFilterValue)/100;
                        var demand = parseFloat(target.text());
                        if(calc <= demand){
                            if(calc == 0 && demand == 0){
                                return;
                            }
                            if(ignore_col.indexOf(colIndx) == -1){
                                if(demand!=0){
                                  target.css('background-color',cls)
                                  ignore_col.push(colIndx);
                                }
                            }	
                        }
                    }															
                }
                
                
                
                if(MGrid.Formula == 'Between'){
                    var ifnb1 = parseInt(MGrid.ProjectFilterValue.split('-')[0])
                    var ifnb2 = parseInt(MGrid.ProjectFilterValue.split('-')[1])

                    var has_capacity = target.attr('capacity');
                    if(has_capacity !== undefined){
                        var calc1 = (parseFloat(has_capacity) * ifnb1)/100;
                        var calc2 = (parseFloat(has_capacity) * ifnb2)/100;
                        var demand = parseFloat(target.text());
                        if(demand > calc1 && demand < calc2){
                            if(ignore_col.indexOf(colIndx) == -1){
                                if(demand!=0){
                                  target.css('background-color',cls)
                                  ignore_col.push(colIndx);
                                }
                            }	
                        }
                    }										
                }				
            }				
        });
    }

function sortOptionConfig(){
    if($('#ganttGrid').find('td[title="Role Details"]').length > 0){
        $('#ganttGrid').find('td[title="Role Details"]').contents().filter(function(){
            return this.nodeType === 3;
        }).remove();
        $('#ganttGrid').find('td[title="Role Details"]').append('<div id="sortingtypeList" class="dropdown-check-list" tabindex="100"><span class="sortingtypeListanchor">Role Details</span><ul class="sortingtypeListitems"></ul></div><span id="role_asc" style="position:absolute;top:10px;color:#1274ac" class="role k-icon k-i-sort-asc-sm"></span><span id="role_desc" style="position:absolute;top:10px;color:#1274ac;display:none" class="role k-icon k-i-sort-desc-sm"></span>');
    }
    else{
        $('#ganttGrid').find('td[title="Projectname"]').contents().filter(function(){
            return this.nodeType === 3;
        }).remove();
        $('#ganttGrid').find('td[title="Projectname"]').append('<div id="sortingtypeList" class="dropdown-check-list" tabindex="100"><span class="sortingtypeListanchor">Role Details</span><ul class="sortingtypeListitems"></ul></div><span id="role_asc" style="position:absolute;top:10px;color:#1274ac" class="role k-icon k-i-sort-asc-sm"></span><span id="role_desc" style="position:absolute;top:10px;color:#1274ac;display:none" class="role k-icon k-i-sort-desc-sm"></span>');
    }
            
    $('.k-grid-header-wrap.k-auto-scrollable').css('position','initial')
    $('.sortingtypeListitems').append('<li onclick="clickapplyrescsorting(1)" id="1">Ascending by Idea / Project Name </li>').append('<li id="2" onclick="clickapplyrescsorting(2)">Descending by Idea / Project Name </li>');
    if(potentialItm_flag && potentialItm_Val != ''){
        /* $('.sortingtypeListitems').append('<li id="3" onclick="clickapplyrescsorting(3)">Ascending by '+potentialItm_Val+' </li>').append('<li id="4" onclick="clickapplyrescsorting(4)">Descending by '+potentialItm_Val+' </li>'); */ // title="IT Ranking"
        $('#ganttGrid').find('td[title="'+potentialItm_Val+'"]').contents().filter(function(){
            return this.nodeType === 3;
        }).remove(); 
        $('#ganttGrid').find('td[title="'+potentialItm_Val+'"]').append('<div id="sortingtypeList1" class="dropdown-check-list_second" tabindex="100"><span class="sortingtypeListanchor1">'+potentialItm_Val+'</span><ul class="sortingtypeListitems1"></ul></div><span id="custom_asc" style="position:absolute;top:10px;color:#1274ac;display:none" class="custom k-icon k-i-sort-asc-sm"></span><span id="custom_desc" style="position:absolute;top:10px;color:#1274ac;display:none" class="custom k-icon k-i-sort-desc-sm"></span>');
        
        $('.sortingtypeListitems1').append('<li id="3" onclick="clickapplyrescsorting(3)">Ascending by '+potentialItm_Val+' </li>').append('<li id="4" onclick="clickapplyrescsorting(4)">Descending by '+potentialItm_Val+' </li>');
        //$('#ganttGrid').find('td[title="'+potentialItm_Val+'"]').text(potentialItm_Val);
    }  
    //$('.sortingtypeListitems').append('<div style = "padding-top: 23px;"><button onclick="clickapplyrescsorting();return false;" class="k-button k-primary" id=sortaplybtn>Apply</button></div>');
    
    
    /*********************************/
    var checkList = document.getElementById('sortingtypeList');
    var checkList1 = document.getElementById('sortingtypeList1');
    checkList.getElementsByClassName('sortingtypeListanchor')[0].onclick = function(evt) {
        /* if(gridchanged){				
            alert('You have unsaved changes. Changing your sort order will lose these changes. Save your changes before adjusting your sort order.');	
            return false;				
        } */
                
        if (checkList.classList.contains('visible')){
            checkList.classList.remove('visible');
        }
        else{
            $('.sortingtypeListitems').find('li').each(function(x){
                if($(this).attr('id') == sortingType){
                    $(this).css("background", "#ccc");
                }
            });
            
            checkList.classList.add('visible');
            /* if(sortingType == 1){
                $('#role_desc').hide();
                $('#role_asc').show();
            }
            else if(sortingType == 2){
                $('#role_desc').show();
                $('#role_asc').hide();
            } */
            
        }
    }
    if(potentialItm_flag && potentialItm_Val != ''){
        checkList1.getElementsByClassName('sortingtypeListanchor1')[0].onclick = function(evt) {
            
                    
          if (checkList1.classList.contains('visible')){
            checkList1.classList.remove('visible');
          }
          else{
                
                $('.sortingtypeListitems1').find('li').each(function(x){
                    if($(this).attr('id') == sortingType){
                        $(this).css("background", "#ccc");
                    }
                });
                checkList1.classList.add('visible');
            }
        }
    }
    if(sortingApply && sortingType == 1){
        $('#role_desc').hide();
        $('#role_asc').show();
        $('.custom.k-icon').hide()
    }
    else if(sortingApply && sortingType == 2){
        $('#role_desc').show();
        $('#role_asc').hide(); //custom_desc
        $('.custom.k-icon').hide()
    }
    else if(sortingApply && sortingType == 3){
        $('#custom_desc').hide();
        $('#custom_asc').show(); //custom_desc
        $('.role.k-icon').hide()
    }
    else if(sortingApply && sortingType == 4){
        $('#custom_desc').show();
        $('#custom_asc').hide(); //custom_desc
        $('.role.k-icon').hide()
    }
}
var t_art = [];
var sortingApply = false;
var sortingType = 1;


function isValidNumberOrDate(str) {
  return !isNaN(parseFloat(str)) || !isNaN(Date.parse(str));
}


function isValidNumberOrDate(str) {
  return !isNaN(parseFloat(str)) || !isNaN(Date.parse(str));
}
function clickapplyrescsorting(g) {
    
  sortingApply = true;
  sortingType = g;
  var art = [];
  t_art = [];
  var rname = '';
  var rindx = -1;
  var objind = -1;
  var bindall_len = [];
if (Table1Data != undefined){

for (let i = 0; i < global_JxlData.length; i++) {
  const matchingItem = Table1Data.find(item => item.Projectuid === global_JxlData[i].Projectuid);
  if (matchingItem && matchingItem.Prefix1 !== undefined) {
    global_JxlData[i].Prefix1 = matchingItem.Prefix1;
  }
}


}


  for (i = 0; i < global_JxlData.length; i++) {
    if (
      Resources_array_name.indexOf(global_JxlData[i].Projectname) != -1 &&
      Resources_array_name.indexOf(global_JxlData[i].resourceName) != -1
    ) {
      if (art.length > 0) {
        art.unshift(global_JxlData[objind]);
        t_art = t_art.concat(art);
      }

      objind = i;
      rname = '';
      rindx = -1;
      rindx = Resources_array_name.indexOf(global_JxlData[i].Projectname);
      rname = Resources_array_name[rindx];
      art = [];
      bindall_len = global_JxlData.filter(function (gh) {
        return gh.resourceName == rname && gh.Projectname != rname;
      }).length;

      continue;
    } else if (global_JxlData[i].resourceName == rname) {
      art.push(global_JxlData[i]);
    }// Modify the existing sorting logic for the case when g == 1
// Modify the existing sorting logic for the case when g == 1
if (g == 1 && art.length == bindall_len) {
    art = art.sort(function (a, b) {
      const aPotential1 = a.Prefix1;
  const bPotential1 = b.Prefix1;

  // Check if Potential1 is empty or null for both objects
  if ((aPotential1 === null || aPotential1 === "") && (bPotential1 === null || bPotential1 === "")) {
    return a.Projectname.localeCompare(b.Projectname);
  }

  const aPrefixType = getPrefixType(aPotential1);
  const bPrefixType = getPrefixType(bPotential1);

  if (aPotential1 !== null && aPotential1 !== "" && bPotential1 !== null && bPotential1 !== "") {
         if (aPrefixType === 'number' && bPrefixType === 'number') {
      const aNumber = parseFloat(aPotential1);
      const bNumber = parseFloat(bPotential1);
      return aNumber - bNumber;
    }else if(aPrefixType === 'date' && bPrefixType === 'date'){
      const aDate = new Date(a.Prefix1);
      const bDate = new Date(b.Prefix1);
      return aDate - bDate;
    }
  } else if (aPotential1 === "" || aPotential1 === null) {
    // Sort empty Potential1 objects after special types and number/date prefixes
    if (bPrefixType === 'number' || bPrefixType === 'date') {
      return 1;
    }
    if (bPrefixType === 'text') return 1; // Text type first
    if (bPrefixType === 'boolean') return 1; // Boolean type first
  } else if (bPotential1 === "" || bPotential1 === null) {
    // Sort empty Potential1 objects after special types and number/date prefixes
    if (aPrefixType === 'number' || aPrefixType === 'date') {
      return -1;
    }
    if (aPrefixType === 'text') return -1; // Text type first
    if (aPrefixType === 'boolean') return -1; // Boolean type first
  }

  // If Potential1 is empty or null, sort alphabetically
  return a.Projectname.localeCompare(b.Projectname);
    });
  }
  
if (g == 2 && art.length == bindall_len) {
 art = art.sort(function (a, b) {
  const aPotential1 = a.Prefix1;
  const bPotential1 = b.Prefix1;

  // Check if Potential1 is empty or null for both objects
  if ((aPotential1 === null || aPotential1 === "") && (bPotential1 === null || bPotential1 === "")) {
    return b.Projectname.localeCompare(a.Projectname); // Reverse the order
  }

  const aPrefixType = getPrefixType(aPotential1);
  const bPrefixType = getPrefixType(bPotential1);

  if (aPotential1 !== null && aPotential1 !== "" && bPotential1 !== null && bPotential1 !== "") {
    if (aPrefixType === 'number' && bPrefixType === 'number') {
      const aNumber = parseFloat(aPotential1);
      const bNumber = parseFloat(bPotential1);
      return bNumber - aNumber; // Reverse the order
    } else if (aPrefixType === 'date' && bPrefixType === 'date') {
      const aDate = new Date(a.Prefix1);
      const bDate = new Date(b.Prefix1);
      return bDate - aDate; // Reverse the order
    }
  } else if (aPotential1 === "" || aPotential1 === null) {
    // Sort empty Potential1 objects after special types and number/date prefixes
    if (bPrefixType === 'number' || bPrefixType === 'date') {
      return -1; // Reverse the order
    }
    if (bPrefixType === 'text') return -1; // Reverse the order
    if (bPrefixType === 'boolean') return -1; // Reverse the order
  } else if (bPotential1 === "" || bPotential1 === null) {
    // Sort empty Potential1 objects after special types and number/date prefixes
    if (aPrefixType === 'number' || aPrefixType === 'date') {
      return 1; // Reverse the order
    }
    if (aPrefixType === 'text') return 1; // Reverse the order
    if (aPrefixType === 'boolean') return 1; // Reverse the order
  }

  // If Potential1 is empty or null, sort alphabetically
  return b.Projectname.localeCompare(a.Projectname); // Reverse the order
});

}
else if (g == 3 && art.length == bindall_len) {
      art = art.sort(function (a, b) {
        return a.Prefix1 - b.Prefix1 || a.Prefix1.localeCompare(b.Prefix1);
      });
    } else if (g == 4 && art.length == bindall_len) {
      art = art.sort(function (a, b) {
        return b.Prefix1 - a.Prefix1 || b.Prefix1.localeCompare(a.Prefix1);
      });
    }
  }

  art.unshift(global_JxlData[objind]);
  t_art = t_art.concat(art);

  $.LoadingOverlay('show');
  $('.loadingoverlay').css('opacity', '');

  setTimeout(function () {
      var t_art1 = t_art.map(item => ({ ...item })); // Create a deep copy of the array

for (let i = 0; i < t_art.length; i++) {
  delete t_art1[i].Prefix1;
}
    GenerateGridGrid(t_art1);
    $.LoadingOverlay('hide');
  }, 2);
}


function convertToNormalFormat(number) {
  if (typeof number === 'string' && number.includes('e')) {
    return parseFloat(number).toFixed(0);
  }
  return number;
}

function getPrefixType(prefix) {
  if (prefix !== null && prefix !== "") {
      if (!isNaN(Date.parse(prefix))) {
      // Check if prefix is a valid date string
      return 'date';
    }  else  if (!isNaN(prefix) || !isNaN(parseFloat(prefix))){
      // Check if prefix is a valid number (including scientific notation) or numeric string
      return 'number';
    }else if (prefix === 'true' || prefix === 'false') {
      // Check if prefix is a boolean value
      return 'boolean';
    } else {
      // Default to 'text' if no other type is matched
      return 'text';
    }
  } else {
    // Default to 'text' if no other type is matched
    return 'text';
  }
}






function countDecimals(value) {
  if (Math.floor(value) !== value)
    return value.toString().split(".")[1].length || 0;
    return 0;
}
function numberWithCommas11(x) {
    return x.toString().replace(/\B(?<!\.\d*)(?=(\d{3})+(?!\d))/g, ",");
}
var formatter = new Intl.NumberFormat('en-IN', {
  //style: 'currency',
 // currency: '',
 maximumSignificantDigits: 3
});

function numberWithCommas(n) {
    var parts=n.toString().split(".");
    return parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",") + (parts[1] ? "." + parts[1] : "");
}
function formatDateF(dt){		 
    return dt.getUTCFullYear()+'-'+("0" + (dt.getUTCMonth() + 1)).slice(-2)+'-'+("0" + (dt.getUTCDate())).slice(-2);//+'T17:00:00'
}
</script>
<script type="text/x-kendo-template" id="template">
# if (1==1) { #
    <button class='k-button btn-summary'>Click summary</button>
# } #

clickapplyrescsorting(1);
</script>
